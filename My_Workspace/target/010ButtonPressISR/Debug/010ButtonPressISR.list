
010ButtonPressISR.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001134  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000004c  080012c4  080012c4  000022c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001310  08001310  00003074  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08001310  08001310  00002310  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001318  08001318  00003074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001318  08001318  00002318  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800131c  0800131c  0000231c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000074  20000000  08001320  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00003074  2**0
                  CONTENTS
 10 .bss          00000174  20000074  20000074  00003074  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001e8  200001e8  00003074  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00003074  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000b91  00000000  00000000  0000309e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000040c  00000000  00000000  00003c2f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000128  00000000  00000000  00004040  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000f7  00000000  00000000  00004168  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002d26  00000000  00000000  0000425f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000155f  00000000  00000000  00006f85  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000996a  00000000  00000000  000084e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00011e4e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000009e8  00000000  00000000  00011e94  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 0000032b  00000000  00000000  0001287c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000086  00000000  00000000  00012ba7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000074 	.word	0x20000074
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080012ac 	.word	0x080012ac

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000078 	.word	0x20000078
 80001cc:	080012ac 	.word	0x080012ac

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <button_init>:


void button_init(void)
{
  //GPIOA enable (bit 0 = 1)
  *pClkCtrlReg |= ( 1 << 0);
 8000270:	4a0f      	ldr	r2, [pc, #60]	@ (80002b0 <button_init+0x40>)
  //System configuration controller clock enable
  *pClkCtrlRegApb2 |= ( 1 << 14);
 8000272:	4b10      	ldr	r3, [pc, #64]	@ (80002b4 <button_init+0x44>)
  *pClkCtrlReg |= ( 1 << 0);
 8000274:	6812      	ldr	r2, [r2, #0]
  *pClkCtrlRegApb2 |= ( 1 << 14);
 8000276:	6819      	ldr	r1, [r3, #0]
  *pClkCtrlReg |= ( 1 << 0);
 8000278:	6813      	ldr	r3, [r2, #0]
  //Rising trigger enabled (for Event and Interrupt) for input line 0
  *pEXTTIEdgeCtrlReg |= ( 1 << 0);
 800027a:	480f      	ldr	r0, [pc, #60]	@ (80002b8 <button_init+0x48>)
  *pClkCtrlReg |= ( 1 << 0);
 800027c:	f043 0301 	orr.w	r3, r3, #1
 8000280:	6013      	str	r3, [r2, #0]
  *pClkCtrlRegApb2 |= ( 1 << 14);
 8000282:	680b      	ldr	r3, [r1, #0]
  *pEXTTIEdgeCtrlReg |= ( 1 << 0);
 8000284:	6802      	ldr	r2, [r0, #0]
  *pClkCtrlRegApb2 |= ( 1 << 14);
 8000286:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800028a:	600b      	str	r3, [r1, #0]
  *pEXTTIEdgeCtrlReg |= ( 1 << 0);
 800028c:	6813      	ldr	r3, [r2, #0]
  //Interrupt request from line 0 is not masked
  *pEXTIMaskReg |= ( 1 << 0);
 800028e:	490b      	ldr	r1, [pc, #44]	@ (80002bc <button_init+0x4c>)
  *pEXTTIEdgeCtrlReg |= ( 1 << 0);
 8000290:	f043 0301 	orr.w	r3, r3, #1
  *pEXTIMaskReg |= ( 1 << 0);
 8000294:	6809      	ldr	r1, [r1, #0]
  *pEXTTIEdgeCtrlReg |= ( 1 << 0);
 8000296:	6013      	str	r3, [r2, #0]
  *pEXTIMaskReg |= ( 1 << 0);
 8000298:	680b      	ldr	r3, [r1, #0]
  //No idea
  *pNVICIRQEnReg |= ( 1 << 6);
 800029a:	4a09      	ldr	r2, [pc, #36]	@ (80002c0 <button_init+0x50>)
  *pEXTIMaskReg |= ( 1 << 0);
 800029c:	f043 0301 	orr.w	r3, r3, #1
  *pNVICIRQEnReg |= ( 1 << 6);
 80002a0:	6812      	ldr	r2, [r2, #0]
  *pEXTIMaskReg |= ( 1 << 0);
 80002a2:	600b      	str	r3, [r1, #0]
  *pNVICIRQEnReg |= ( 1 << 6);
 80002a4:	6813      	ldr	r3, [r2, #0]
 80002a6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80002aa:	6013      	str	r3, [r2, #0]

}
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop
 80002b0:	20000010 	.word	0x20000010
 80002b4:	2000000c 	.word	0x2000000c
 80002b8:	20000004 	.word	0x20000004
 80002bc:	20000008 	.word	0x20000008
 80002c0:	20000000 	.word	0x20000000

080002c4 <main>:
{
 80002c4:	b580      	push	{r7, lr}
		*pEXTIMaskReg &= ~( 1 << 0);
 80002c6:	4e16      	ldr	r6, [pc, #88]	@ (8000320 <main+0x5c>)
 80002c8:	4d16      	ldr	r5, [pc, #88]	@ (8000324 <main+0x60>)
 80002ca:	f8df 905c 	ldr.w	r9, [pc, #92]	@ 8000328 <main+0x64>
			for(uint32_t volatile i=0;i<500000/2;i++);
 80002ce:	4c17      	ldr	r4, [pc, #92]	@ (800032c <main+0x68>)
			printf("Button is pressed : %lu\n",g_button_press_count);
 80002d0:	4f17      	ldr	r7, [pc, #92]	@ (8000330 <main+0x6c>)
{
 80002d2:	b082      	sub	sp, #8
	button_init();
 80002d4:	f7ff ffcc 	bl	8000270 <button_init>
		*pEXTIMaskReg &= ~( 1 << 0);
 80002d8:	6833      	ldr	r3, [r6, #0]
			for(uint32_t volatile i=0;i<500000/2;i++);
 80002da:	f04f 0800 	mov.w	r8, #0
		*pEXTIMaskReg &= ~( 1 << 0);
 80002de:	681a      	ldr	r2, [r3, #0]
 80002e0:	f022 0201 	bic.w	r2, r2, #1
 80002e4:	601a      	str	r2, [r3, #0]
		if(g_button_pressed){
 80002e6:	782a      	ldrb	r2, [r5, #0]
 80002e8:	b1aa      	cbz	r2, 8000316 <main+0x52>
			for(uint32_t volatile i=0;i<500000/2;i++);
 80002ea:	f8cd 8004 	str.w	r8, [sp, #4]
 80002ee:	9b01      	ldr	r3, [sp, #4]
 80002f0:	42a3      	cmp	r3, r4
 80002f2:	d805      	bhi.n	8000300 <main+0x3c>
 80002f4:	9b01      	ldr	r3, [sp, #4]
 80002f6:	3301      	adds	r3, #1
 80002f8:	9301      	str	r3, [sp, #4]
 80002fa:	9b01      	ldr	r3, [sp, #4]
 80002fc:	42a3      	cmp	r3, r4
 80002fe:	d9f9      	bls.n	80002f4 <main+0x30>
			g_button_press_count++;
 8000300:	f8d9 1000 	ldr.w	r1, [r9]
			printf("Button is pressed : %lu\n",g_button_press_count);
 8000304:	4638      	mov	r0, r7
			g_button_press_count++;
 8000306:	3101      	adds	r1, #1
 8000308:	f8c9 1000 	str.w	r1, [r9]
			printf("Button is pressed : %lu\n",g_button_press_count);
 800030c:	f000 f96a 	bl	80005e4 <iprintf>
		*pEXTIMaskReg |= ( 1 << 0);
 8000310:	6833      	ldr	r3, [r6, #0]
			g_button_pressed = 0;
 8000312:	f885 8000 	strb.w	r8, [r5]
		*pEXTIMaskReg |= ( 1 << 0);
 8000316:	681a      	ldr	r2, [r3, #0]
 8000318:	f042 0201 	orr.w	r2, r2, #1
 800031c:	601a      	str	r2, [r3, #0]
		*pEXTIMaskReg &= ~( 1 << 0);
 800031e:	e7de      	b.n	80002de <main+0x1a>
 8000320:	20000008 	.word	0x20000008
 8000324:	20000094 	.word	0x20000094
 8000328:	20000090 	.word	0x20000090
 800032c:	0003d08f 	.word	0x0003d08f
 8000330:	080012c4 	.word	0x080012c4

08000334 <EXTI0_IRQHandler>:
void EXTI0_IRQHandler(void)
{
	//Make this flag SET . if button pressed
  g_button_pressed = 1;

  *pEXTTIPendReg |= ( 1 << 0);
 8000334:	4a04      	ldr	r2, [pc, #16]	@ (8000348 <EXTI0_IRQHandler+0x14>)
  g_button_pressed = 1;
 8000336:	4b05      	ldr	r3, [pc, #20]	@ (800034c <EXTI0_IRQHandler+0x18>)
  *pEXTTIPendReg |= ( 1 << 0);
 8000338:	6812      	ldr	r2, [r2, #0]
  g_button_pressed = 1;
 800033a:	2101      	movs	r1, #1
 800033c:	7019      	strb	r1, [r3, #0]
  *pEXTTIPendReg |= ( 1 << 0);
 800033e:	6813      	ldr	r3, [r2, #0]
 8000340:	430b      	orrs	r3, r1
 8000342:	6013      	str	r3, [r2, #0]
}
 8000344:	4770      	bx	lr
 8000346:	bf00      	nop
 8000348:	20000014 	.word	0x20000014
 800034c:	20000094 	.word	0x20000094

08000350 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000350:	b570      	push	{r4, r5, r6, lr}
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000352:	1e16      	subs	r6, r2, #0
 8000354:	dd07      	ble.n	8000366 <_read+0x16>
 8000356:	460c      	mov	r4, r1
 8000358:	198d      	adds	r5, r1, r6
  {
    *ptr++ = __io_getchar();
 800035a:	f3af 8000 	nop.w
 800035e:	f804 0b01 	strb.w	r0, [r4], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000362:	42a5      	cmp	r5, r4
 8000364:	d1f9      	bne.n	800035a <_read+0xa>
  }

  return len;
}
 8000366:	4630      	mov	r0, r6
 8000368:	bd70      	pop	{r4, r5, r6, pc}
 800036a:	bf00      	nop

0800036c <_write>:
__attribute__((weak)) int _write(int file, char *ptr, int len)
{
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800036c:	1e10      	subs	r0, r2, #0
 800036e:	dd1b      	ble.n	80003a8 <_write+0x3c>
{
 8000370:	b510      	push	{r4, lr}
	DEMCR |= ( 1 << 24);
 8000372:	f04f 2ce0 	mov.w	ip, #3758153728	@ 0xe000e000
 8000376:	eb01 0e00 	add.w	lr, r1, r0
	ITM_TRACE_EN |= ( 1 << 0);
 800037a:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
	DEMCR |= ( 1 << 24);
 800037e:	f8dc 3dfc 	ldr.w	r3, [ip, #3580]	@ 0xdfc
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);  //all we are doing is calling the ITM function to get the print
 8000382:	f811 4b01 	ldrb.w	r4, [r1], #1
	DEMCR |= ( 1 << 24);
 8000386:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800038a:	f8cc 3dfc 	str.w	r3, [ip, #3580]	@ 0xdfc
	ITM_TRACE_EN |= ( 1 << 0);
 800038e:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
 8000392:	f043 0301 	orr.w	r3, r3, #1
 8000396:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
	while(!(ITM_STIMULUS_PORT0 & 1));
 800039a:	6813      	ldr	r3, [r2, #0]
 800039c:	07db      	lsls	r3, r3, #31
 800039e:	d5fc      	bpl.n	800039a <_write+0x2e>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a0:	458e      	cmp	lr, r1
	ITM_STIMULUS_PORT0 = ch;
 80003a2:	6014      	str	r4, [r2, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a4:	d1eb      	bne.n	800037e <_write+0x12>
  }
  return len;
}
 80003a6:	bd10      	pop	{r4, pc}
 80003a8:	4770      	bx	lr
 80003aa:	bf00      	nop

080003ac <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 80003ac:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80003b0:	4770      	bx	lr
 80003b2:	bf00      	nop

080003b4 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 80003b4:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80003b8:	604b      	str	r3, [r1, #4]
  return 0;
}
 80003ba:	2000      	movs	r0, #0
 80003bc:	4770      	bx	lr
 80003be:	bf00      	nop

080003c0 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 80003c0:	2001      	movs	r0, #1
 80003c2:	4770      	bx	lr

080003c4 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 80003c4:	2000      	movs	r0, #0
 80003c6:	4770      	bx	lr

080003c8 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003c8:	490c      	ldr	r1, [pc, #48]	@ (80003fc <_sbrk+0x34>)
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003ca:	4a0d      	ldr	r2, [pc, #52]	@ (8000400 <_sbrk+0x38>)
  if (NULL == __sbrk_heap_end)
 80003cc:	680b      	ldr	r3, [r1, #0]
{
 80003ce:	b510      	push	{r4, lr}
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003d0:	4c0c      	ldr	r4, [pc, #48]	@ (8000404 <_sbrk+0x3c>)
 80003d2:	1b12      	subs	r2, r2, r4
  if (NULL == __sbrk_heap_end)
 80003d4:	b12b      	cbz	r3, 80003e2 <_sbrk+0x1a>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003d6:	4418      	add	r0, r3
 80003d8:	4290      	cmp	r0, r2
 80003da:	d807      	bhi.n	80003ec <_sbrk+0x24>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 80003dc:	6008      	str	r0, [r1, #0]

  return (void *)prev_heap_end;
}
 80003de:	4618      	mov	r0, r3
 80003e0:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 80003e2:	4b09      	ldr	r3, [pc, #36]	@ (8000408 <_sbrk+0x40>)
 80003e4:	600b      	str	r3, [r1, #0]
  if (__sbrk_heap_end + incr > max_heap)
 80003e6:	4418      	add	r0, r3
 80003e8:	4290      	cmp	r0, r2
 80003ea:	d9f7      	bls.n	80003dc <_sbrk+0x14>
    errno = ENOMEM;
 80003ec:	f000 f914 	bl	8000618 <__errno>
 80003f0:	230c      	movs	r3, #12
 80003f2:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80003f4:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 80003f8:	4618      	mov	r0, r3
 80003fa:	bd10      	pop	{r4, pc}
 80003fc:	20000098 	.word	0x20000098
 8000400:	20020000 	.word	0x20020000
 8000404:	00000400 	.word	0x00000400
 8000408:	200001e8 	.word	0x200001e8

0800040c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800040c:	480d      	ldr	r0, [pc, #52]	@ (8000444 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800040e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000410:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000414:	480c      	ldr	r0, [pc, #48]	@ (8000448 <LoopForever+0x6>)
  ldr r1, =_edata
 8000416:	490d      	ldr	r1, [pc, #52]	@ (800044c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000418:	4a0d      	ldr	r2, [pc, #52]	@ (8000450 <LoopForever+0xe>)
  movs r3, #0
 800041a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800041c:	e002      	b.n	8000424 <LoopCopyDataInit>

0800041e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800041e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000420:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000422:	3304      	adds	r3, #4

08000424 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000424:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000426:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000428:	d3f9      	bcc.n	800041e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800042a:	4a0a      	ldr	r2, [pc, #40]	@ (8000454 <LoopForever+0x12>)
  ldr r4, =_ebss
 800042c:	4c0a      	ldr	r4, [pc, #40]	@ (8000458 <LoopForever+0x16>)
  movs r3, #0
 800042e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000430:	e001      	b.n	8000436 <LoopFillZerobss>

08000432 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000432:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000434:	3204      	adds	r2, #4

08000436 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000436:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000438:	d3fb      	bcc.n	8000432 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800043a:	f000 f8f3 	bl	8000624 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800043e:	f7ff ff41 	bl	80002c4 <main>

08000442 <LoopForever>:

LoopForever:
  b LoopForever
 8000442:	e7fe      	b.n	8000442 <LoopForever>
  ldr   r0, =_estack
 8000444:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000448:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800044c:	20000074 	.word	0x20000074
  ldr r2, =_sidata
 8000450:	08001320 	.word	0x08001320
  ldr r2, =_sbss
 8000454:	20000074 	.word	0x20000074
  ldr r4, =_ebss
 8000458:	200001e8 	.word	0x200001e8

0800045c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800045c:	e7fe      	b.n	800045c <ADC_IRQHandler>
	...

08000460 <std>:
 8000460:	2300      	movs	r3, #0
 8000462:	b510      	push	{r4, lr}
 8000464:	4604      	mov	r4, r0
 8000466:	e9c0 3300 	strd	r3, r3, [r0]
 800046a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800046e:	6083      	str	r3, [r0, #8]
 8000470:	8181      	strh	r1, [r0, #12]
 8000472:	6643      	str	r3, [r0, #100]	@ 0x64
 8000474:	81c2      	strh	r2, [r0, #14]
 8000476:	6183      	str	r3, [r0, #24]
 8000478:	4619      	mov	r1, r3
 800047a:	2208      	movs	r2, #8
 800047c:	305c      	adds	r0, #92	@ 0x5c
 800047e:	f000 f8c3 	bl	8000608 <memset>
 8000482:	4b0d      	ldr	r3, [pc, #52]	@ (80004b8 <std+0x58>)
 8000484:	6263      	str	r3, [r4, #36]	@ 0x24
 8000486:	4b0d      	ldr	r3, [pc, #52]	@ (80004bc <std+0x5c>)
 8000488:	62a3      	str	r3, [r4, #40]	@ 0x28
 800048a:	4b0d      	ldr	r3, [pc, #52]	@ (80004c0 <std+0x60>)
 800048c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800048e:	4b0d      	ldr	r3, [pc, #52]	@ (80004c4 <std+0x64>)
 8000490:	6323      	str	r3, [r4, #48]	@ 0x30
 8000492:	4b0d      	ldr	r3, [pc, #52]	@ (80004c8 <std+0x68>)
 8000494:	6224      	str	r4, [r4, #32]
 8000496:	429c      	cmp	r4, r3
 8000498:	d006      	beq.n	80004a8 <std+0x48>
 800049a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800049e:	4294      	cmp	r4, r2
 80004a0:	d002      	beq.n	80004a8 <std+0x48>
 80004a2:	33d0      	adds	r3, #208	@ 0xd0
 80004a4:	429c      	cmp	r4, r3
 80004a6:	d105      	bne.n	80004b4 <std+0x54>
 80004a8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80004ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004b0:	f000 b8dc 	b.w	800066c <__retarget_lock_init_recursive>
 80004b4:	bd10      	pop	{r4, pc}
 80004b6:	bf00      	nop
 80004b8:	08000eb5 	.word	0x08000eb5
 80004bc:	08000ed7 	.word	0x08000ed7
 80004c0:	08000f0f 	.word	0x08000f0f
 80004c4:	08000f33 	.word	0x08000f33
 80004c8:	2000009c 	.word	0x2000009c

080004cc <stdio_exit_handler>:
 80004cc:	4a02      	ldr	r2, [pc, #8]	@ (80004d8 <stdio_exit_handler+0xc>)
 80004ce:	4903      	ldr	r1, [pc, #12]	@ (80004dc <stdio_exit_handler+0x10>)
 80004d0:	4803      	ldr	r0, [pc, #12]	@ (80004e0 <stdio_exit_handler+0x14>)
 80004d2:	f000 b869 	b.w	80005a8 <_fwalk_sglue>
 80004d6:	bf00      	nop
 80004d8:	20000018 	.word	0x20000018
 80004dc:	08000e4d 	.word	0x08000e4d
 80004e0:	20000028 	.word	0x20000028

080004e4 <cleanup_stdio>:
 80004e4:	6841      	ldr	r1, [r0, #4]
 80004e6:	4b0c      	ldr	r3, [pc, #48]	@ (8000518 <cleanup_stdio+0x34>)
 80004e8:	4299      	cmp	r1, r3
 80004ea:	b510      	push	{r4, lr}
 80004ec:	4604      	mov	r4, r0
 80004ee:	d001      	beq.n	80004f4 <cleanup_stdio+0x10>
 80004f0:	f000 fcac 	bl	8000e4c <_fflush_r>
 80004f4:	68a1      	ldr	r1, [r4, #8]
 80004f6:	4b09      	ldr	r3, [pc, #36]	@ (800051c <cleanup_stdio+0x38>)
 80004f8:	4299      	cmp	r1, r3
 80004fa:	d002      	beq.n	8000502 <cleanup_stdio+0x1e>
 80004fc:	4620      	mov	r0, r4
 80004fe:	f000 fca5 	bl	8000e4c <_fflush_r>
 8000502:	68e1      	ldr	r1, [r4, #12]
 8000504:	4b06      	ldr	r3, [pc, #24]	@ (8000520 <cleanup_stdio+0x3c>)
 8000506:	4299      	cmp	r1, r3
 8000508:	d004      	beq.n	8000514 <cleanup_stdio+0x30>
 800050a:	4620      	mov	r0, r4
 800050c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000510:	f000 bc9c 	b.w	8000e4c <_fflush_r>
 8000514:	bd10      	pop	{r4, pc}
 8000516:	bf00      	nop
 8000518:	2000009c 	.word	0x2000009c
 800051c:	20000104 	.word	0x20000104
 8000520:	2000016c 	.word	0x2000016c

08000524 <global_stdio_init.part.0>:
 8000524:	b510      	push	{r4, lr}
 8000526:	4b0b      	ldr	r3, [pc, #44]	@ (8000554 <global_stdio_init.part.0+0x30>)
 8000528:	4c0b      	ldr	r4, [pc, #44]	@ (8000558 <global_stdio_init.part.0+0x34>)
 800052a:	4a0c      	ldr	r2, [pc, #48]	@ (800055c <global_stdio_init.part.0+0x38>)
 800052c:	601a      	str	r2, [r3, #0]
 800052e:	4620      	mov	r0, r4
 8000530:	2200      	movs	r2, #0
 8000532:	2104      	movs	r1, #4
 8000534:	f7ff ff94 	bl	8000460 <std>
 8000538:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800053c:	2201      	movs	r2, #1
 800053e:	2109      	movs	r1, #9
 8000540:	f7ff ff8e 	bl	8000460 <std>
 8000544:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000548:	2202      	movs	r2, #2
 800054a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800054e:	2112      	movs	r1, #18
 8000550:	f7ff bf86 	b.w	8000460 <std>
 8000554:	200001d4 	.word	0x200001d4
 8000558:	2000009c 	.word	0x2000009c
 800055c:	080004cd 	.word	0x080004cd

08000560 <__sfp_lock_acquire>:
 8000560:	4801      	ldr	r0, [pc, #4]	@ (8000568 <__sfp_lock_acquire+0x8>)
 8000562:	f000 b884 	b.w	800066e <__retarget_lock_acquire_recursive>
 8000566:	bf00      	nop
 8000568:	200001d9 	.word	0x200001d9

0800056c <__sfp_lock_release>:
 800056c:	4801      	ldr	r0, [pc, #4]	@ (8000574 <__sfp_lock_release+0x8>)
 800056e:	f000 b87f 	b.w	8000670 <__retarget_lock_release_recursive>
 8000572:	bf00      	nop
 8000574:	200001d9 	.word	0x200001d9

08000578 <__sinit>:
 8000578:	b510      	push	{r4, lr}
 800057a:	4604      	mov	r4, r0
 800057c:	f7ff fff0 	bl	8000560 <__sfp_lock_acquire>
 8000580:	6a23      	ldr	r3, [r4, #32]
 8000582:	b11b      	cbz	r3, 800058c <__sinit+0x14>
 8000584:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000588:	f7ff bff0 	b.w	800056c <__sfp_lock_release>
 800058c:	4b04      	ldr	r3, [pc, #16]	@ (80005a0 <__sinit+0x28>)
 800058e:	6223      	str	r3, [r4, #32]
 8000590:	4b04      	ldr	r3, [pc, #16]	@ (80005a4 <__sinit+0x2c>)
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	2b00      	cmp	r3, #0
 8000596:	d1f5      	bne.n	8000584 <__sinit+0xc>
 8000598:	f7ff ffc4 	bl	8000524 <global_stdio_init.part.0>
 800059c:	e7f2      	b.n	8000584 <__sinit+0xc>
 800059e:	bf00      	nop
 80005a0:	080004e5 	.word	0x080004e5
 80005a4:	200001d4 	.word	0x200001d4

080005a8 <_fwalk_sglue>:
 80005a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005ac:	4607      	mov	r7, r0
 80005ae:	4688      	mov	r8, r1
 80005b0:	4614      	mov	r4, r2
 80005b2:	2600      	movs	r6, #0
 80005b4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005b8:	f1b9 0901 	subs.w	r9, r9, #1
 80005bc:	d505      	bpl.n	80005ca <_fwalk_sglue+0x22>
 80005be:	6824      	ldr	r4, [r4, #0]
 80005c0:	2c00      	cmp	r4, #0
 80005c2:	d1f7      	bne.n	80005b4 <_fwalk_sglue+0xc>
 80005c4:	4630      	mov	r0, r6
 80005c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80005ca:	89ab      	ldrh	r3, [r5, #12]
 80005cc:	2b01      	cmp	r3, #1
 80005ce:	d907      	bls.n	80005e0 <_fwalk_sglue+0x38>
 80005d0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005d4:	3301      	adds	r3, #1
 80005d6:	d003      	beq.n	80005e0 <_fwalk_sglue+0x38>
 80005d8:	4629      	mov	r1, r5
 80005da:	4638      	mov	r0, r7
 80005dc:	47c0      	blx	r8
 80005de:	4306      	orrs	r6, r0
 80005e0:	3568      	adds	r5, #104	@ 0x68
 80005e2:	e7e9      	b.n	80005b8 <_fwalk_sglue+0x10>

080005e4 <iprintf>:
 80005e4:	b40f      	push	{r0, r1, r2, r3}
 80005e6:	b507      	push	{r0, r1, r2, lr}
 80005e8:	4906      	ldr	r1, [pc, #24]	@ (8000604 <iprintf+0x20>)
 80005ea:	ab04      	add	r3, sp, #16
 80005ec:	6808      	ldr	r0, [r1, #0]
 80005ee:	f853 2b04 	ldr.w	r2, [r3], #4
 80005f2:	6881      	ldr	r1, [r0, #8]
 80005f4:	9301      	str	r3, [sp, #4]
 80005f6:	f000 f863 	bl	80006c0 <_vfiprintf_r>
 80005fa:	b003      	add	sp, #12
 80005fc:	f85d eb04 	ldr.w	lr, [sp], #4
 8000600:	b004      	add	sp, #16
 8000602:	4770      	bx	lr
 8000604:	20000024 	.word	0x20000024

08000608 <memset>:
 8000608:	4402      	add	r2, r0
 800060a:	4603      	mov	r3, r0
 800060c:	4293      	cmp	r3, r2
 800060e:	d100      	bne.n	8000612 <memset+0xa>
 8000610:	4770      	bx	lr
 8000612:	f803 1b01 	strb.w	r1, [r3], #1
 8000616:	e7f9      	b.n	800060c <memset+0x4>

08000618 <__errno>:
 8000618:	4b01      	ldr	r3, [pc, #4]	@ (8000620 <__errno+0x8>)
 800061a:	6818      	ldr	r0, [r3, #0]
 800061c:	4770      	bx	lr
 800061e:	bf00      	nop
 8000620:	20000024 	.word	0x20000024

08000624 <__libc_init_array>:
 8000624:	b570      	push	{r4, r5, r6, lr}
 8000626:	4d0d      	ldr	r5, [pc, #52]	@ (800065c <__libc_init_array+0x38>)
 8000628:	4c0d      	ldr	r4, [pc, #52]	@ (8000660 <__libc_init_array+0x3c>)
 800062a:	1b64      	subs	r4, r4, r5
 800062c:	10a4      	asrs	r4, r4, #2
 800062e:	2600      	movs	r6, #0
 8000630:	42a6      	cmp	r6, r4
 8000632:	d109      	bne.n	8000648 <__libc_init_array+0x24>
 8000634:	4d0b      	ldr	r5, [pc, #44]	@ (8000664 <__libc_init_array+0x40>)
 8000636:	4c0c      	ldr	r4, [pc, #48]	@ (8000668 <__libc_init_array+0x44>)
 8000638:	f000 fe38 	bl	80012ac <_init>
 800063c:	1b64      	subs	r4, r4, r5
 800063e:	10a4      	asrs	r4, r4, #2
 8000640:	2600      	movs	r6, #0
 8000642:	42a6      	cmp	r6, r4
 8000644:	d105      	bne.n	8000652 <__libc_init_array+0x2e>
 8000646:	bd70      	pop	{r4, r5, r6, pc}
 8000648:	f855 3b04 	ldr.w	r3, [r5], #4
 800064c:	4798      	blx	r3
 800064e:	3601      	adds	r6, #1
 8000650:	e7ee      	b.n	8000630 <__libc_init_array+0xc>
 8000652:	f855 3b04 	ldr.w	r3, [r5], #4
 8000656:	4798      	blx	r3
 8000658:	3601      	adds	r6, #1
 800065a:	e7f2      	b.n	8000642 <__libc_init_array+0x1e>
 800065c:	08001318 	.word	0x08001318
 8000660:	08001318 	.word	0x08001318
 8000664:	08001318 	.word	0x08001318
 8000668:	0800131c 	.word	0x0800131c

0800066c <__retarget_lock_init_recursive>:
 800066c:	4770      	bx	lr

0800066e <__retarget_lock_acquire_recursive>:
 800066e:	4770      	bx	lr

08000670 <__retarget_lock_release_recursive>:
 8000670:	4770      	bx	lr

08000672 <__sfputc_r>:
 8000672:	6893      	ldr	r3, [r2, #8]
 8000674:	3b01      	subs	r3, #1
 8000676:	2b00      	cmp	r3, #0
 8000678:	b410      	push	{r4}
 800067a:	6093      	str	r3, [r2, #8]
 800067c:	da07      	bge.n	800068e <__sfputc_r+0x1c>
 800067e:	6994      	ldr	r4, [r2, #24]
 8000680:	42a3      	cmp	r3, r4
 8000682:	db01      	blt.n	8000688 <__sfputc_r+0x16>
 8000684:	290a      	cmp	r1, #10
 8000686:	d102      	bne.n	800068e <__sfputc_r+0x1c>
 8000688:	bc10      	pop	{r4}
 800068a:	f000 bc56 	b.w	8000f3a <__swbuf_r>
 800068e:	6813      	ldr	r3, [r2, #0]
 8000690:	1c58      	adds	r0, r3, #1
 8000692:	6010      	str	r0, [r2, #0]
 8000694:	7019      	strb	r1, [r3, #0]
 8000696:	4608      	mov	r0, r1
 8000698:	bc10      	pop	{r4}
 800069a:	4770      	bx	lr

0800069c <__sfputs_r>:
 800069c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800069e:	4606      	mov	r6, r0
 80006a0:	460f      	mov	r7, r1
 80006a2:	4614      	mov	r4, r2
 80006a4:	18d5      	adds	r5, r2, r3
 80006a6:	42ac      	cmp	r4, r5
 80006a8:	d101      	bne.n	80006ae <__sfputs_r+0x12>
 80006aa:	2000      	movs	r0, #0
 80006ac:	e007      	b.n	80006be <__sfputs_r+0x22>
 80006ae:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006b2:	463a      	mov	r2, r7
 80006b4:	4630      	mov	r0, r6
 80006b6:	f7ff ffdc 	bl	8000672 <__sfputc_r>
 80006ba:	1c43      	adds	r3, r0, #1
 80006bc:	d1f3      	bne.n	80006a6 <__sfputs_r+0xa>
 80006be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080006c0 <_vfiprintf_r>:
 80006c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80006c4:	460d      	mov	r5, r1
 80006c6:	b09d      	sub	sp, #116	@ 0x74
 80006c8:	4614      	mov	r4, r2
 80006ca:	4698      	mov	r8, r3
 80006cc:	4606      	mov	r6, r0
 80006ce:	b118      	cbz	r0, 80006d8 <_vfiprintf_r+0x18>
 80006d0:	6a03      	ldr	r3, [r0, #32]
 80006d2:	b90b      	cbnz	r3, 80006d8 <_vfiprintf_r+0x18>
 80006d4:	f7ff ff50 	bl	8000578 <__sinit>
 80006d8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80006da:	07d9      	lsls	r1, r3, #31
 80006dc:	d405      	bmi.n	80006ea <_vfiprintf_r+0x2a>
 80006de:	89ab      	ldrh	r3, [r5, #12]
 80006e0:	059a      	lsls	r2, r3, #22
 80006e2:	d402      	bmi.n	80006ea <_vfiprintf_r+0x2a>
 80006e4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80006e6:	f7ff ffc2 	bl	800066e <__retarget_lock_acquire_recursive>
 80006ea:	89ab      	ldrh	r3, [r5, #12]
 80006ec:	071b      	lsls	r3, r3, #28
 80006ee:	d501      	bpl.n	80006f4 <_vfiprintf_r+0x34>
 80006f0:	692b      	ldr	r3, [r5, #16]
 80006f2:	b99b      	cbnz	r3, 800071c <_vfiprintf_r+0x5c>
 80006f4:	4629      	mov	r1, r5
 80006f6:	4630      	mov	r0, r6
 80006f8:	f000 fc5e 	bl	8000fb8 <__swsetup_r>
 80006fc:	b170      	cbz	r0, 800071c <_vfiprintf_r+0x5c>
 80006fe:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000700:	07dc      	lsls	r4, r3, #31
 8000702:	d504      	bpl.n	800070e <_vfiprintf_r+0x4e>
 8000704:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000708:	b01d      	add	sp, #116	@ 0x74
 800070a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800070e:	89ab      	ldrh	r3, [r5, #12]
 8000710:	0598      	lsls	r0, r3, #22
 8000712:	d4f7      	bmi.n	8000704 <_vfiprintf_r+0x44>
 8000714:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000716:	f7ff ffab 	bl	8000670 <__retarget_lock_release_recursive>
 800071a:	e7f3      	b.n	8000704 <_vfiprintf_r+0x44>
 800071c:	2300      	movs	r3, #0
 800071e:	9309      	str	r3, [sp, #36]	@ 0x24
 8000720:	2320      	movs	r3, #32
 8000722:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000726:	f8cd 800c 	str.w	r8, [sp, #12]
 800072a:	2330      	movs	r3, #48	@ 0x30
 800072c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80008dc <_vfiprintf_r+0x21c>
 8000730:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000734:	f04f 0901 	mov.w	r9, #1
 8000738:	4623      	mov	r3, r4
 800073a:	469a      	mov	sl, r3
 800073c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000740:	b10a      	cbz	r2, 8000746 <_vfiprintf_r+0x86>
 8000742:	2a25      	cmp	r2, #37	@ 0x25
 8000744:	d1f9      	bne.n	800073a <_vfiprintf_r+0x7a>
 8000746:	ebba 0b04 	subs.w	fp, sl, r4
 800074a:	d00b      	beq.n	8000764 <_vfiprintf_r+0xa4>
 800074c:	465b      	mov	r3, fp
 800074e:	4622      	mov	r2, r4
 8000750:	4629      	mov	r1, r5
 8000752:	4630      	mov	r0, r6
 8000754:	f7ff ffa2 	bl	800069c <__sfputs_r>
 8000758:	3001      	adds	r0, #1
 800075a:	f000 80a7 	beq.w	80008ac <_vfiprintf_r+0x1ec>
 800075e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000760:	445a      	add	r2, fp
 8000762:	9209      	str	r2, [sp, #36]	@ 0x24
 8000764:	f89a 3000 	ldrb.w	r3, [sl]
 8000768:	2b00      	cmp	r3, #0
 800076a:	f000 809f 	beq.w	80008ac <_vfiprintf_r+0x1ec>
 800076e:	2300      	movs	r3, #0
 8000770:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000774:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000778:	f10a 0a01 	add.w	sl, sl, #1
 800077c:	9304      	str	r3, [sp, #16]
 800077e:	9307      	str	r3, [sp, #28]
 8000780:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000784:	931a      	str	r3, [sp, #104]	@ 0x68
 8000786:	4654      	mov	r4, sl
 8000788:	2205      	movs	r2, #5
 800078a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800078e:	4853      	ldr	r0, [pc, #332]	@ (80008dc <_vfiprintf_r+0x21c>)
 8000790:	f7ff fd1e 	bl	80001d0 <memchr>
 8000794:	9a04      	ldr	r2, [sp, #16]
 8000796:	b9d8      	cbnz	r0, 80007d0 <_vfiprintf_r+0x110>
 8000798:	06d1      	lsls	r1, r2, #27
 800079a:	bf44      	itt	mi
 800079c:	2320      	movmi	r3, #32
 800079e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80007a2:	0713      	lsls	r3, r2, #28
 80007a4:	bf44      	itt	mi
 80007a6:	232b      	movmi	r3, #43	@ 0x2b
 80007a8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80007ac:	f89a 3000 	ldrb.w	r3, [sl]
 80007b0:	2b2a      	cmp	r3, #42	@ 0x2a
 80007b2:	d015      	beq.n	80007e0 <_vfiprintf_r+0x120>
 80007b4:	9a07      	ldr	r2, [sp, #28]
 80007b6:	4654      	mov	r4, sl
 80007b8:	2000      	movs	r0, #0
 80007ba:	f04f 0c0a 	mov.w	ip, #10
 80007be:	4621      	mov	r1, r4
 80007c0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80007c4:	3b30      	subs	r3, #48	@ 0x30
 80007c6:	2b09      	cmp	r3, #9
 80007c8:	d94b      	bls.n	8000862 <_vfiprintf_r+0x1a2>
 80007ca:	b1b0      	cbz	r0, 80007fa <_vfiprintf_r+0x13a>
 80007cc:	9207      	str	r2, [sp, #28]
 80007ce:	e014      	b.n	80007fa <_vfiprintf_r+0x13a>
 80007d0:	eba0 0308 	sub.w	r3, r0, r8
 80007d4:	fa09 f303 	lsl.w	r3, r9, r3
 80007d8:	4313      	orrs	r3, r2
 80007da:	9304      	str	r3, [sp, #16]
 80007dc:	46a2      	mov	sl, r4
 80007de:	e7d2      	b.n	8000786 <_vfiprintf_r+0xc6>
 80007e0:	9b03      	ldr	r3, [sp, #12]
 80007e2:	1d19      	adds	r1, r3, #4
 80007e4:	681b      	ldr	r3, [r3, #0]
 80007e6:	9103      	str	r1, [sp, #12]
 80007e8:	2b00      	cmp	r3, #0
 80007ea:	bfbb      	ittet	lt
 80007ec:	425b      	neglt	r3, r3
 80007ee:	f042 0202 	orrlt.w	r2, r2, #2
 80007f2:	9307      	strge	r3, [sp, #28]
 80007f4:	9307      	strlt	r3, [sp, #28]
 80007f6:	bfb8      	it	lt
 80007f8:	9204      	strlt	r2, [sp, #16]
 80007fa:	7823      	ldrb	r3, [r4, #0]
 80007fc:	2b2e      	cmp	r3, #46	@ 0x2e
 80007fe:	d10a      	bne.n	8000816 <_vfiprintf_r+0x156>
 8000800:	7863      	ldrb	r3, [r4, #1]
 8000802:	2b2a      	cmp	r3, #42	@ 0x2a
 8000804:	d132      	bne.n	800086c <_vfiprintf_r+0x1ac>
 8000806:	9b03      	ldr	r3, [sp, #12]
 8000808:	1d1a      	adds	r2, r3, #4
 800080a:	681b      	ldr	r3, [r3, #0]
 800080c:	9203      	str	r2, [sp, #12]
 800080e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000812:	3402      	adds	r4, #2
 8000814:	9305      	str	r3, [sp, #20]
 8000816:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 80008e0 <_vfiprintf_r+0x220>
 800081a:	7821      	ldrb	r1, [r4, #0]
 800081c:	2203      	movs	r2, #3
 800081e:	4650      	mov	r0, sl
 8000820:	f7ff fcd6 	bl	80001d0 <memchr>
 8000824:	b138      	cbz	r0, 8000836 <_vfiprintf_r+0x176>
 8000826:	9b04      	ldr	r3, [sp, #16]
 8000828:	eba0 000a 	sub.w	r0, r0, sl
 800082c:	2240      	movs	r2, #64	@ 0x40
 800082e:	4082      	lsls	r2, r0
 8000830:	4313      	orrs	r3, r2
 8000832:	3401      	adds	r4, #1
 8000834:	9304      	str	r3, [sp, #16]
 8000836:	f814 1b01 	ldrb.w	r1, [r4], #1
 800083a:	482a      	ldr	r0, [pc, #168]	@ (80008e4 <_vfiprintf_r+0x224>)
 800083c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000840:	2206      	movs	r2, #6
 8000842:	f7ff fcc5 	bl	80001d0 <memchr>
 8000846:	2800      	cmp	r0, #0
 8000848:	d03f      	beq.n	80008ca <_vfiprintf_r+0x20a>
 800084a:	4b27      	ldr	r3, [pc, #156]	@ (80008e8 <_vfiprintf_r+0x228>)
 800084c:	bb1b      	cbnz	r3, 8000896 <_vfiprintf_r+0x1d6>
 800084e:	9b03      	ldr	r3, [sp, #12]
 8000850:	3307      	adds	r3, #7
 8000852:	f023 0307 	bic.w	r3, r3, #7
 8000856:	3308      	adds	r3, #8
 8000858:	9303      	str	r3, [sp, #12]
 800085a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800085c:	443b      	add	r3, r7
 800085e:	9309      	str	r3, [sp, #36]	@ 0x24
 8000860:	e76a      	b.n	8000738 <_vfiprintf_r+0x78>
 8000862:	fb0c 3202 	mla	r2, ip, r2, r3
 8000866:	460c      	mov	r4, r1
 8000868:	2001      	movs	r0, #1
 800086a:	e7a8      	b.n	80007be <_vfiprintf_r+0xfe>
 800086c:	2300      	movs	r3, #0
 800086e:	3401      	adds	r4, #1
 8000870:	9305      	str	r3, [sp, #20]
 8000872:	4619      	mov	r1, r3
 8000874:	f04f 0c0a 	mov.w	ip, #10
 8000878:	4620      	mov	r0, r4
 800087a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800087e:	3a30      	subs	r2, #48	@ 0x30
 8000880:	2a09      	cmp	r2, #9
 8000882:	d903      	bls.n	800088c <_vfiprintf_r+0x1cc>
 8000884:	2b00      	cmp	r3, #0
 8000886:	d0c6      	beq.n	8000816 <_vfiprintf_r+0x156>
 8000888:	9105      	str	r1, [sp, #20]
 800088a:	e7c4      	b.n	8000816 <_vfiprintf_r+0x156>
 800088c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000890:	4604      	mov	r4, r0
 8000892:	2301      	movs	r3, #1
 8000894:	e7f0      	b.n	8000878 <_vfiprintf_r+0x1b8>
 8000896:	ab03      	add	r3, sp, #12
 8000898:	9300      	str	r3, [sp, #0]
 800089a:	462a      	mov	r2, r5
 800089c:	4b13      	ldr	r3, [pc, #76]	@ (80008ec <_vfiprintf_r+0x22c>)
 800089e:	a904      	add	r1, sp, #16
 80008a0:	4630      	mov	r0, r6
 80008a2:	f3af 8000 	nop.w
 80008a6:	4607      	mov	r7, r0
 80008a8:	1c78      	adds	r0, r7, #1
 80008aa:	d1d6      	bne.n	800085a <_vfiprintf_r+0x19a>
 80008ac:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80008ae:	07d9      	lsls	r1, r3, #31
 80008b0:	d405      	bmi.n	80008be <_vfiprintf_r+0x1fe>
 80008b2:	89ab      	ldrh	r3, [r5, #12]
 80008b4:	059a      	lsls	r2, r3, #22
 80008b6:	d402      	bmi.n	80008be <_vfiprintf_r+0x1fe>
 80008b8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80008ba:	f7ff fed9 	bl	8000670 <__retarget_lock_release_recursive>
 80008be:	89ab      	ldrh	r3, [r5, #12]
 80008c0:	065b      	lsls	r3, r3, #25
 80008c2:	f53f af1f 	bmi.w	8000704 <_vfiprintf_r+0x44>
 80008c6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80008c8:	e71e      	b.n	8000708 <_vfiprintf_r+0x48>
 80008ca:	ab03      	add	r3, sp, #12
 80008cc:	9300      	str	r3, [sp, #0]
 80008ce:	462a      	mov	r2, r5
 80008d0:	4b06      	ldr	r3, [pc, #24]	@ (80008ec <_vfiprintf_r+0x22c>)
 80008d2:	a904      	add	r1, sp, #16
 80008d4:	4630      	mov	r0, r6
 80008d6:	f000 f91b 	bl	8000b10 <_printf_i>
 80008da:	e7e4      	b.n	80008a6 <_vfiprintf_r+0x1e6>
 80008dc:	080012dd 	.word	0x080012dd
 80008e0:	080012e3 	.word	0x080012e3
 80008e4:	080012e7 	.word	0x080012e7
 80008e8:	00000000 	.word	0x00000000
 80008ec:	0800069d 	.word	0x0800069d

080008f0 <sbrk_aligned>:
 80008f0:	b570      	push	{r4, r5, r6, lr}
 80008f2:	4e0f      	ldr	r6, [pc, #60]	@ (8000930 <sbrk_aligned+0x40>)
 80008f4:	460c      	mov	r4, r1
 80008f6:	6831      	ldr	r1, [r6, #0]
 80008f8:	4605      	mov	r5, r0
 80008fa:	b911      	cbnz	r1, 8000902 <sbrk_aligned+0x12>
 80008fc:	f000 fc48 	bl	8001190 <_sbrk_r>
 8000900:	6030      	str	r0, [r6, #0]
 8000902:	4621      	mov	r1, r4
 8000904:	4628      	mov	r0, r5
 8000906:	f000 fc43 	bl	8001190 <_sbrk_r>
 800090a:	1c43      	adds	r3, r0, #1
 800090c:	d103      	bne.n	8000916 <sbrk_aligned+0x26>
 800090e:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8000912:	4620      	mov	r0, r4
 8000914:	bd70      	pop	{r4, r5, r6, pc}
 8000916:	1cc4      	adds	r4, r0, #3
 8000918:	f024 0403 	bic.w	r4, r4, #3
 800091c:	42a0      	cmp	r0, r4
 800091e:	d0f8      	beq.n	8000912 <sbrk_aligned+0x22>
 8000920:	1a21      	subs	r1, r4, r0
 8000922:	4628      	mov	r0, r5
 8000924:	f000 fc34 	bl	8001190 <_sbrk_r>
 8000928:	3001      	adds	r0, #1
 800092a:	d1f2      	bne.n	8000912 <sbrk_aligned+0x22>
 800092c:	e7ef      	b.n	800090e <sbrk_aligned+0x1e>
 800092e:	bf00      	nop
 8000930:	200001dc 	.word	0x200001dc

08000934 <_malloc_r>:
 8000934:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000938:	1ccd      	adds	r5, r1, #3
 800093a:	f025 0503 	bic.w	r5, r5, #3
 800093e:	3508      	adds	r5, #8
 8000940:	2d0c      	cmp	r5, #12
 8000942:	bf38      	it	cc
 8000944:	250c      	movcc	r5, #12
 8000946:	2d00      	cmp	r5, #0
 8000948:	4606      	mov	r6, r0
 800094a:	db01      	blt.n	8000950 <_malloc_r+0x1c>
 800094c:	42a9      	cmp	r1, r5
 800094e:	d904      	bls.n	800095a <_malloc_r+0x26>
 8000950:	230c      	movs	r3, #12
 8000952:	6033      	str	r3, [r6, #0]
 8000954:	2000      	movs	r0, #0
 8000956:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800095a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000a30 <_malloc_r+0xfc>
 800095e:	f000 fa9d 	bl	8000e9c <__malloc_lock>
 8000962:	f8d8 3000 	ldr.w	r3, [r8]
 8000966:	461c      	mov	r4, r3
 8000968:	bb44      	cbnz	r4, 80009bc <_malloc_r+0x88>
 800096a:	4629      	mov	r1, r5
 800096c:	4630      	mov	r0, r6
 800096e:	f7ff ffbf 	bl	80008f0 <sbrk_aligned>
 8000972:	1c43      	adds	r3, r0, #1
 8000974:	4604      	mov	r4, r0
 8000976:	d158      	bne.n	8000a2a <_malloc_r+0xf6>
 8000978:	f8d8 4000 	ldr.w	r4, [r8]
 800097c:	4627      	mov	r7, r4
 800097e:	2f00      	cmp	r7, #0
 8000980:	d143      	bne.n	8000a0a <_malloc_r+0xd6>
 8000982:	2c00      	cmp	r4, #0
 8000984:	d04b      	beq.n	8000a1e <_malloc_r+0xea>
 8000986:	6823      	ldr	r3, [r4, #0]
 8000988:	4639      	mov	r1, r7
 800098a:	4630      	mov	r0, r6
 800098c:	eb04 0903 	add.w	r9, r4, r3
 8000990:	f000 fbfe 	bl	8001190 <_sbrk_r>
 8000994:	4581      	cmp	r9, r0
 8000996:	d142      	bne.n	8000a1e <_malloc_r+0xea>
 8000998:	6821      	ldr	r1, [r4, #0]
 800099a:	1a6d      	subs	r5, r5, r1
 800099c:	4629      	mov	r1, r5
 800099e:	4630      	mov	r0, r6
 80009a0:	f7ff ffa6 	bl	80008f0 <sbrk_aligned>
 80009a4:	3001      	adds	r0, #1
 80009a6:	d03a      	beq.n	8000a1e <_malloc_r+0xea>
 80009a8:	6823      	ldr	r3, [r4, #0]
 80009aa:	442b      	add	r3, r5
 80009ac:	6023      	str	r3, [r4, #0]
 80009ae:	f8d8 3000 	ldr.w	r3, [r8]
 80009b2:	685a      	ldr	r2, [r3, #4]
 80009b4:	bb62      	cbnz	r2, 8000a10 <_malloc_r+0xdc>
 80009b6:	f8c8 7000 	str.w	r7, [r8]
 80009ba:	e00f      	b.n	80009dc <_malloc_r+0xa8>
 80009bc:	6822      	ldr	r2, [r4, #0]
 80009be:	1b52      	subs	r2, r2, r5
 80009c0:	d420      	bmi.n	8000a04 <_malloc_r+0xd0>
 80009c2:	2a0b      	cmp	r2, #11
 80009c4:	d917      	bls.n	80009f6 <_malloc_r+0xc2>
 80009c6:	1961      	adds	r1, r4, r5
 80009c8:	42a3      	cmp	r3, r4
 80009ca:	6025      	str	r5, [r4, #0]
 80009cc:	bf18      	it	ne
 80009ce:	6059      	strne	r1, [r3, #4]
 80009d0:	6863      	ldr	r3, [r4, #4]
 80009d2:	bf08      	it	eq
 80009d4:	f8c8 1000 	streq.w	r1, [r8]
 80009d8:	5162      	str	r2, [r4, r5]
 80009da:	604b      	str	r3, [r1, #4]
 80009dc:	4630      	mov	r0, r6
 80009de:	f000 fa63 	bl	8000ea8 <__malloc_unlock>
 80009e2:	f104 000b 	add.w	r0, r4, #11
 80009e6:	1d23      	adds	r3, r4, #4
 80009e8:	f020 0007 	bic.w	r0, r0, #7
 80009ec:	1ac2      	subs	r2, r0, r3
 80009ee:	bf1c      	itt	ne
 80009f0:	1a1b      	subne	r3, r3, r0
 80009f2:	50a3      	strne	r3, [r4, r2]
 80009f4:	e7af      	b.n	8000956 <_malloc_r+0x22>
 80009f6:	6862      	ldr	r2, [r4, #4]
 80009f8:	42a3      	cmp	r3, r4
 80009fa:	bf0c      	ite	eq
 80009fc:	f8c8 2000 	streq.w	r2, [r8]
 8000a00:	605a      	strne	r2, [r3, #4]
 8000a02:	e7eb      	b.n	80009dc <_malloc_r+0xa8>
 8000a04:	4623      	mov	r3, r4
 8000a06:	6864      	ldr	r4, [r4, #4]
 8000a08:	e7ae      	b.n	8000968 <_malloc_r+0x34>
 8000a0a:	463c      	mov	r4, r7
 8000a0c:	687f      	ldr	r7, [r7, #4]
 8000a0e:	e7b6      	b.n	800097e <_malloc_r+0x4a>
 8000a10:	461a      	mov	r2, r3
 8000a12:	685b      	ldr	r3, [r3, #4]
 8000a14:	42a3      	cmp	r3, r4
 8000a16:	d1fb      	bne.n	8000a10 <_malloc_r+0xdc>
 8000a18:	2300      	movs	r3, #0
 8000a1a:	6053      	str	r3, [r2, #4]
 8000a1c:	e7de      	b.n	80009dc <_malloc_r+0xa8>
 8000a1e:	230c      	movs	r3, #12
 8000a20:	6033      	str	r3, [r6, #0]
 8000a22:	4630      	mov	r0, r6
 8000a24:	f000 fa40 	bl	8000ea8 <__malloc_unlock>
 8000a28:	e794      	b.n	8000954 <_malloc_r+0x20>
 8000a2a:	6005      	str	r5, [r0, #0]
 8000a2c:	e7d6      	b.n	80009dc <_malloc_r+0xa8>
 8000a2e:	bf00      	nop
 8000a30:	200001e0 	.word	0x200001e0

08000a34 <_printf_common>:
 8000a34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000a38:	4616      	mov	r6, r2
 8000a3a:	4698      	mov	r8, r3
 8000a3c:	688a      	ldr	r2, [r1, #8]
 8000a3e:	690b      	ldr	r3, [r1, #16]
 8000a40:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000a44:	4293      	cmp	r3, r2
 8000a46:	bfb8      	it	lt
 8000a48:	4613      	movlt	r3, r2
 8000a4a:	6033      	str	r3, [r6, #0]
 8000a4c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000a50:	4607      	mov	r7, r0
 8000a52:	460c      	mov	r4, r1
 8000a54:	b10a      	cbz	r2, 8000a5a <_printf_common+0x26>
 8000a56:	3301      	adds	r3, #1
 8000a58:	6033      	str	r3, [r6, #0]
 8000a5a:	6823      	ldr	r3, [r4, #0]
 8000a5c:	0699      	lsls	r1, r3, #26
 8000a5e:	bf42      	ittt	mi
 8000a60:	6833      	ldrmi	r3, [r6, #0]
 8000a62:	3302      	addmi	r3, #2
 8000a64:	6033      	strmi	r3, [r6, #0]
 8000a66:	6825      	ldr	r5, [r4, #0]
 8000a68:	f015 0506 	ands.w	r5, r5, #6
 8000a6c:	d106      	bne.n	8000a7c <_printf_common+0x48>
 8000a6e:	f104 0a19 	add.w	sl, r4, #25
 8000a72:	68e3      	ldr	r3, [r4, #12]
 8000a74:	6832      	ldr	r2, [r6, #0]
 8000a76:	1a9b      	subs	r3, r3, r2
 8000a78:	42ab      	cmp	r3, r5
 8000a7a:	dc26      	bgt.n	8000aca <_printf_common+0x96>
 8000a7c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000a80:	6822      	ldr	r2, [r4, #0]
 8000a82:	3b00      	subs	r3, #0
 8000a84:	bf18      	it	ne
 8000a86:	2301      	movne	r3, #1
 8000a88:	0692      	lsls	r2, r2, #26
 8000a8a:	d42b      	bmi.n	8000ae4 <_printf_common+0xb0>
 8000a8c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000a90:	4641      	mov	r1, r8
 8000a92:	4638      	mov	r0, r7
 8000a94:	47c8      	blx	r9
 8000a96:	3001      	adds	r0, #1
 8000a98:	d01e      	beq.n	8000ad8 <_printf_common+0xa4>
 8000a9a:	6823      	ldr	r3, [r4, #0]
 8000a9c:	6922      	ldr	r2, [r4, #16]
 8000a9e:	f003 0306 	and.w	r3, r3, #6
 8000aa2:	2b04      	cmp	r3, #4
 8000aa4:	bf02      	ittt	eq
 8000aa6:	68e5      	ldreq	r5, [r4, #12]
 8000aa8:	6833      	ldreq	r3, [r6, #0]
 8000aaa:	1aed      	subeq	r5, r5, r3
 8000aac:	68a3      	ldr	r3, [r4, #8]
 8000aae:	bf0c      	ite	eq
 8000ab0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000ab4:	2500      	movne	r5, #0
 8000ab6:	4293      	cmp	r3, r2
 8000ab8:	bfc4      	itt	gt
 8000aba:	1a9b      	subgt	r3, r3, r2
 8000abc:	18ed      	addgt	r5, r5, r3
 8000abe:	2600      	movs	r6, #0
 8000ac0:	341a      	adds	r4, #26
 8000ac2:	42b5      	cmp	r5, r6
 8000ac4:	d11a      	bne.n	8000afc <_printf_common+0xc8>
 8000ac6:	2000      	movs	r0, #0
 8000ac8:	e008      	b.n	8000adc <_printf_common+0xa8>
 8000aca:	2301      	movs	r3, #1
 8000acc:	4652      	mov	r2, sl
 8000ace:	4641      	mov	r1, r8
 8000ad0:	4638      	mov	r0, r7
 8000ad2:	47c8      	blx	r9
 8000ad4:	3001      	adds	r0, #1
 8000ad6:	d103      	bne.n	8000ae0 <_printf_common+0xac>
 8000ad8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000adc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ae0:	3501      	adds	r5, #1
 8000ae2:	e7c6      	b.n	8000a72 <_printf_common+0x3e>
 8000ae4:	18e1      	adds	r1, r4, r3
 8000ae6:	1c5a      	adds	r2, r3, #1
 8000ae8:	2030      	movs	r0, #48	@ 0x30
 8000aea:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000aee:	4422      	add	r2, r4
 8000af0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000af4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000af8:	3302      	adds	r3, #2
 8000afa:	e7c7      	b.n	8000a8c <_printf_common+0x58>
 8000afc:	2301      	movs	r3, #1
 8000afe:	4622      	mov	r2, r4
 8000b00:	4641      	mov	r1, r8
 8000b02:	4638      	mov	r0, r7
 8000b04:	47c8      	blx	r9
 8000b06:	3001      	adds	r0, #1
 8000b08:	d0e6      	beq.n	8000ad8 <_printf_common+0xa4>
 8000b0a:	3601      	adds	r6, #1
 8000b0c:	e7d9      	b.n	8000ac2 <_printf_common+0x8e>
	...

08000b10 <_printf_i>:
 8000b10:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000b14:	7e0f      	ldrb	r7, [r1, #24]
 8000b16:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000b18:	2f78      	cmp	r7, #120	@ 0x78
 8000b1a:	4691      	mov	r9, r2
 8000b1c:	4680      	mov	r8, r0
 8000b1e:	460c      	mov	r4, r1
 8000b20:	469a      	mov	sl, r3
 8000b22:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000b26:	d807      	bhi.n	8000b38 <_printf_i+0x28>
 8000b28:	2f62      	cmp	r7, #98	@ 0x62
 8000b2a:	d80a      	bhi.n	8000b42 <_printf_i+0x32>
 8000b2c:	2f00      	cmp	r7, #0
 8000b2e:	f000 80d1 	beq.w	8000cd4 <_printf_i+0x1c4>
 8000b32:	2f58      	cmp	r7, #88	@ 0x58
 8000b34:	f000 80b8 	beq.w	8000ca8 <_printf_i+0x198>
 8000b38:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000b3c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000b40:	e03a      	b.n	8000bb8 <_printf_i+0xa8>
 8000b42:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000b46:	2b15      	cmp	r3, #21
 8000b48:	d8f6      	bhi.n	8000b38 <_printf_i+0x28>
 8000b4a:	a101      	add	r1, pc, #4	@ (adr r1, 8000b50 <_printf_i+0x40>)
 8000b4c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000b50:	08000ba9 	.word	0x08000ba9
 8000b54:	08000bbd 	.word	0x08000bbd
 8000b58:	08000b39 	.word	0x08000b39
 8000b5c:	08000b39 	.word	0x08000b39
 8000b60:	08000b39 	.word	0x08000b39
 8000b64:	08000b39 	.word	0x08000b39
 8000b68:	08000bbd 	.word	0x08000bbd
 8000b6c:	08000b39 	.word	0x08000b39
 8000b70:	08000b39 	.word	0x08000b39
 8000b74:	08000b39 	.word	0x08000b39
 8000b78:	08000b39 	.word	0x08000b39
 8000b7c:	08000cbb 	.word	0x08000cbb
 8000b80:	08000be7 	.word	0x08000be7
 8000b84:	08000c75 	.word	0x08000c75
 8000b88:	08000b39 	.word	0x08000b39
 8000b8c:	08000b39 	.word	0x08000b39
 8000b90:	08000cdd 	.word	0x08000cdd
 8000b94:	08000b39 	.word	0x08000b39
 8000b98:	08000be7 	.word	0x08000be7
 8000b9c:	08000b39 	.word	0x08000b39
 8000ba0:	08000b39 	.word	0x08000b39
 8000ba4:	08000c7d 	.word	0x08000c7d
 8000ba8:	6833      	ldr	r3, [r6, #0]
 8000baa:	1d1a      	adds	r2, r3, #4
 8000bac:	681b      	ldr	r3, [r3, #0]
 8000bae:	6032      	str	r2, [r6, #0]
 8000bb0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000bb4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000bb8:	2301      	movs	r3, #1
 8000bba:	e09c      	b.n	8000cf6 <_printf_i+0x1e6>
 8000bbc:	6833      	ldr	r3, [r6, #0]
 8000bbe:	6820      	ldr	r0, [r4, #0]
 8000bc0:	1d19      	adds	r1, r3, #4
 8000bc2:	6031      	str	r1, [r6, #0]
 8000bc4:	0606      	lsls	r6, r0, #24
 8000bc6:	d501      	bpl.n	8000bcc <_printf_i+0xbc>
 8000bc8:	681d      	ldr	r5, [r3, #0]
 8000bca:	e003      	b.n	8000bd4 <_printf_i+0xc4>
 8000bcc:	0645      	lsls	r5, r0, #25
 8000bce:	d5fb      	bpl.n	8000bc8 <_printf_i+0xb8>
 8000bd0:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000bd4:	2d00      	cmp	r5, #0
 8000bd6:	da03      	bge.n	8000be0 <_printf_i+0xd0>
 8000bd8:	232d      	movs	r3, #45	@ 0x2d
 8000bda:	426d      	negs	r5, r5
 8000bdc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000be0:	4858      	ldr	r0, [pc, #352]	@ (8000d44 <_printf_i+0x234>)
 8000be2:	230a      	movs	r3, #10
 8000be4:	e011      	b.n	8000c0a <_printf_i+0xfa>
 8000be6:	6821      	ldr	r1, [r4, #0]
 8000be8:	6833      	ldr	r3, [r6, #0]
 8000bea:	0608      	lsls	r0, r1, #24
 8000bec:	f853 5b04 	ldr.w	r5, [r3], #4
 8000bf0:	d402      	bmi.n	8000bf8 <_printf_i+0xe8>
 8000bf2:	0649      	lsls	r1, r1, #25
 8000bf4:	bf48      	it	mi
 8000bf6:	b2ad      	uxthmi	r5, r5
 8000bf8:	2f6f      	cmp	r7, #111	@ 0x6f
 8000bfa:	4852      	ldr	r0, [pc, #328]	@ (8000d44 <_printf_i+0x234>)
 8000bfc:	6033      	str	r3, [r6, #0]
 8000bfe:	bf14      	ite	ne
 8000c00:	230a      	movne	r3, #10
 8000c02:	2308      	moveq	r3, #8
 8000c04:	2100      	movs	r1, #0
 8000c06:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000c0a:	6866      	ldr	r6, [r4, #4]
 8000c0c:	60a6      	str	r6, [r4, #8]
 8000c0e:	2e00      	cmp	r6, #0
 8000c10:	db05      	blt.n	8000c1e <_printf_i+0x10e>
 8000c12:	6821      	ldr	r1, [r4, #0]
 8000c14:	432e      	orrs	r6, r5
 8000c16:	f021 0104 	bic.w	r1, r1, #4
 8000c1a:	6021      	str	r1, [r4, #0]
 8000c1c:	d04b      	beq.n	8000cb6 <_printf_i+0x1a6>
 8000c1e:	4616      	mov	r6, r2
 8000c20:	fbb5 f1f3 	udiv	r1, r5, r3
 8000c24:	fb03 5711 	mls	r7, r3, r1, r5
 8000c28:	5dc7      	ldrb	r7, [r0, r7]
 8000c2a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000c2e:	462f      	mov	r7, r5
 8000c30:	42bb      	cmp	r3, r7
 8000c32:	460d      	mov	r5, r1
 8000c34:	d9f4      	bls.n	8000c20 <_printf_i+0x110>
 8000c36:	2b08      	cmp	r3, #8
 8000c38:	d10b      	bne.n	8000c52 <_printf_i+0x142>
 8000c3a:	6823      	ldr	r3, [r4, #0]
 8000c3c:	07df      	lsls	r7, r3, #31
 8000c3e:	d508      	bpl.n	8000c52 <_printf_i+0x142>
 8000c40:	6923      	ldr	r3, [r4, #16]
 8000c42:	6861      	ldr	r1, [r4, #4]
 8000c44:	4299      	cmp	r1, r3
 8000c46:	bfde      	ittt	le
 8000c48:	2330      	movle	r3, #48	@ 0x30
 8000c4a:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000c4e:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8000c52:	1b92      	subs	r2, r2, r6
 8000c54:	6122      	str	r2, [r4, #16]
 8000c56:	f8cd a000 	str.w	sl, [sp]
 8000c5a:	464b      	mov	r3, r9
 8000c5c:	aa03      	add	r2, sp, #12
 8000c5e:	4621      	mov	r1, r4
 8000c60:	4640      	mov	r0, r8
 8000c62:	f7ff fee7 	bl	8000a34 <_printf_common>
 8000c66:	3001      	adds	r0, #1
 8000c68:	d14a      	bne.n	8000d00 <_printf_i+0x1f0>
 8000c6a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000c6e:	b004      	add	sp, #16
 8000c70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c74:	6823      	ldr	r3, [r4, #0]
 8000c76:	f043 0320 	orr.w	r3, r3, #32
 8000c7a:	6023      	str	r3, [r4, #0]
 8000c7c:	4832      	ldr	r0, [pc, #200]	@ (8000d48 <_printf_i+0x238>)
 8000c7e:	2778      	movs	r7, #120	@ 0x78
 8000c80:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000c84:	6823      	ldr	r3, [r4, #0]
 8000c86:	6831      	ldr	r1, [r6, #0]
 8000c88:	061f      	lsls	r7, r3, #24
 8000c8a:	f851 5b04 	ldr.w	r5, [r1], #4
 8000c8e:	d402      	bmi.n	8000c96 <_printf_i+0x186>
 8000c90:	065f      	lsls	r7, r3, #25
 8000c92:	bf48      	it	mi
 8000c94:	b2ad      	uxthmi	r5, r5
 8000c96:	6031      	str	r1, [r6, #0]
 8000c98:	07d9      	lsls	r1, r3, #31
 8000c9a:	bf44      	itt	mi
 8000c9c:	f043 0320 	orrmi.w	r3, r3, #32
 8000ca0:	6023      	strmi	r3, [r4, #0]
 8000ca2:	b11d      	cbz	r5, 8000cac <_printf_i+0x19c>
 8000ca4:	2310      	movs	r3, #16
 8000ca6:	e7ad      	b.n	8000c04 <_printf_i+0xf4>
 8000ca8:	4826      	ldr	r0, [pc, #152]	@ (8000d44 <_printf_i+0x234>)
 8000caa:	e7e9      	b.n	8000c80 <_printf_i+0x170>
 8000cac:	6823      	ldr	r3, [r4, #0]
 8000cae:	f023 0320 	bic.w	r3, r3, #32
 8000cb2:	6023      	str	r3, [r4, #0]
 8000cb4:	e7f6      	b.n	8000ca4 <_printf_i+0x194>
 8000cb6:	4616      	mov	r6, r2
 8000cb8:	e7bd      	b.n	8000c36 <_printf_i+0x126>
 8000cba:	6833      	ldr	r3, [r6, #0]
 8000cbc:	6825      	ldr	r5, [r4, #0]
 8000cbe:	6961      	ldr	r1, [r4, #20]
 8000cc0:	1d18      	adds	r0, r3, #4
 8000cc2:	6030      	str	r0, [r6, #0]
 8000cc4:	062e      	lsls	r6, r5, #24
 8000cc6:	681b      	ldr	r3, [r3, #0]
 8000cc8:	d501      	bpl.n	8000cce <_printf_i+0x1be>
 8000cca:	6019      	str	r1, [r3, #0]
 8000ccc:	e002      	b.n	8000cd4 <_printf_i+0x1c4>
 8000cce:	0668      	lsls	r0, r5, #25
 8000cd0:	d5fb      	bpl.n	8000cca <_printf_i+0x1ba>
 8000cd2:	8019      	strh	r1, [r3, #0]
 8000cd4:	2300      	movs	r3, #0
 8000cd6:	6123      	str	r3, [r4, #16]
 8000cd8:	4616      	mov	r6, r2
 8000cda:	e7bc      	b.n	8000c56 <_printf_i+0x146>
 8000cdc:	6833      	ldr	r3, [r6, #0]
 8000cde:	1d1a      	adds	r2, r3, #4
 8000ce0:	6032      	str	r2, [r6, #0]
 8000ce2:	681e      	ldr	r6, [r3, #0]
 8000ce4:	6862      	ldr	r2, [r4, #4]
 8000ce6:	2100      	movs	r1, #0
 8000ce8:	4630      	mov	r0, r6
 8000cea:	f7ff fa71 	bl	80001d0 <memchr>
 8000cee:	b108      	cbz	r0, 8000cf4 <_printf_i+0x1e4>
 8000cf0:	1b80      	subs	r0, r0, r6
 8000cf2:	6060      	str	r0, [r4, #4]
 8000cf4:	6863      	ldr	r3, [r4, #4]
 8000cf6:	6123      	str	r3, [r4, #16]
 8000cf8:	2300      	movs	r3, #0
 8000cfa:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000cfe:	e7aa      	b.n	8000c56 <_printf_i+0x146>
 8000d00:	6923      	ldr	r3, [r4, #16]
 8000d02:	4632      	mov	r2, r6
 8000d04:	4649      	mov	r1, r9
 8000d06:	4640      	mov	r0, r8
 8000d08:	47d0      	blx	sl
 8000d0a:	3001      	adds	r0, #1
 8000d0c:	d0ad      	beq.n	8000c6a <_printf_i+0x15a>
 8000d0e:	6823      	ldr	r3, [r4, #0]
 8000d10:	079b      	lsls	r3, r3, #30
 8000d12:	d413      	bmi.n	8000d3c <_printf_i+0x22c>
 8000d14:	68e0      	ldr	r0, [r4, #12]
 8000d16:	9b03      	ldr	r3, [sp, #12]
 8000d18:	4298      	cmp	r0, r3
 8000d1a:	bfb8      	it	lt
 8000d1c:	4618      	movlt	r0, r3
 8000d1e:	e7a6      	b.n	8000c6e <_printf_i+0x15e>
 8000d20:	2301      	movs	r3, #1
 8000d22:	4632      	mov	r2, r6
 8000d24:	4649      	mov	r1, r9
 8000d26:	4640      	mov	r0, r8
 8000d28:	47d0      	blx	sl
 8000d2a:	3001      	adds	r0, #1
 8000d2c:	d09d      	beq.n	8000c6a <_printf_i+0x15a>
 8000d2e:	3501      	adds	r5, #1
 8000d30:	68e3      	ldr	r3, [r4, #12]
 8000d32:	9903      	ldr	r1, [sp, #12]
 8000d34:	1a5b      	subs	r3, r3, r1
 8000d36:	42ab      	cmp	r3, r5
 8000d38:	dcf2      	bgt.n	8000d20 <_printf_i+0x210>
 8000d3a:	e7eb      	b.n	8000d14 <_printf_i+0x204>
 8000d3c:	2500      	movs	r5, #0
 8000d3e:	f104 0619 	add.w	r6, r4, #25
 8000d42:	e7f5      	b.n	8000d30 <_printf_i+0x220>
 8000d44:	080012ee 	.word	0x080012ee
 8000d48:	080012ff 	.word	0x080012ff

08000d4c <__sflush_r>:
 8000d4c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000d50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d52:	0716      	lsls	r6, r2, #28
 8000d54:	4605      	mov	r5, r0
 8000d56:	460c      	mov	r4, r1
 8000d58:	d454      	bmi.n	8000e04 <__sflush_r+0xb8>
 8000d5a:	684b      	ldr	r3, [r1, #4]
 8000d5c:	2b00      	cmp	r3, #0
 8000d5e:	dc02      	bgt.n	8000d66 <__sflush_r+0x1a>
 8000d60:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000d62:	2b00      	cmp	r3, #0
 8000d64:	dd48      	ble.n	8000df8 <__sflush_r+0xac>
 8000d66:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000d68:	2e00      	cmp	r6, #0
 8000d6a:	d045      	beq.n	8000df8 <__sflush_r+0xac>
 8000d6c:	2300      	movs	r3, #0
 8000d6e:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000d72:	682f      	ldr	r7, [r5, #0]
 8000d74:	6a21      	ldr	r1, [r4, #32]
 8000d76:	602b      	str	r3, [r5, #0]
 8000d78:	d030      	beq.n	8000ddc <__sflush_r+0x90>
 8000d7a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000d7c:	89a3      	ldrh	r3, [r4, #12]
 8000d7e:	0759      	lsls	r1, r3, #29
 8000d80:	d505      	bpl.n	8000d8e <__sflush_r+0x42>
 8000d82:	6863      	ldr	r3, [r4, #4]
 8000d84:	1ad2      	subs	r2, r2, r3
 8000d86:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000d88:	b10b      	cbz	r3, 8000d8e <__sflush_r+0x42>
 8000d8a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000d8c:	1ad2      	subs	r2, r2, r3
 8000d8e:	2300      	movs	r3, #0
 8000d90:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000d92:	6a21      	ldr	r1, [r4, #32]
 8000d94:	4628      	mov	r0, r5
 8000d96:	47b0      	blx	r6
 8000d98:	1c43      	adds	r3, r0, #1
 8000d9a:	89a3      	ldrh	r3, [r4, #12]
 8000d9c:	d106      	bne.n	8000dac <__sflush_r+0x60>
 8000d9e:	6829      	ldr	r1, [r5, #0]
 8000da0:	291d      	cmp	r1, #29
 8000da2:	d82b      	bhi.n	8000dfc <__sflush_r+0xb0>
 8000da4:	4a28      	ldr	r2, [pc, #160]	@ (8000e48 <__sflush_r+0xfc>)
 8000da6:	40ca      	lsrs	r2, r1
 8000da8:	07d6      	lsls	r6, r2, #31
 8000daa:	d527      	bpl.n	8000dfc <__sflush_r+0xb0>
 8000dac:	2200      	movs	r2, #0
 8000dae:	6062      	str	r2, [r4, #4]
 8000db0:	04d9      	lsls	r1, r3, #19
 8000db2:	6922      	ldr	r2, [r4, #16]
 8000db4:	6022      	str	r2, [r4, #0]
 8000db6:	d504      	bpl.n	8000dc2 <__sflush_r+0x76>
 8000db8:	1c42      	adds	r2, r0, #1
 8000dba:	d101      	bne.n	8000dc0 <__sflush_r+0x74>
 8000dbc:	682b      	ldr	r3, [r5, #0]
 8000dbe:	b903      	cbnz	r3, 8000dc2 <__sflush_r+0x76>
 8000dc0:	6560      	str	r0, [r4, #84]	@ 0x54
 8000dc2:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000dc4:	602f      	str	r7, [r5, #0]
 8000dc6:	b1b9      	cbz	r1, 8000df8 <__sflush_r+0xac>
 8000dc8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000dcc:	4299      	cmp	r1, r3
 8000dce:	d002      	beq.n	8000dd6 <__sflush_r+0x8a>
 8000dd0:	4628      	mov	r0, r5
 8000dd2:	f000 fa21 	bl	8001218 <_free_r>
 8000dd6:	2300      	movs	r3, #0
 8000dd8:	6363      	str	r3, [r4, #52]	@ 0x34
 8000dda:	e00d      	b.n	8000df8 <__sflush_r+0xac>
 8000ddc:	2301      	movs	r3, #1
 8000dde:	4628      	mov	r0, r5
 8000de0:	47b0      	blx	r6
 8000de2:	4602      	mov	r2, r0
 8000de4:	1c50      	adds	r0, r2, #1
 8000de6:	d1c9      	bne.n	8000d7c <__sflush_r+0x30>
 8000de8:	682b      	ldr	r3, [r5, #0]
 8000dea:	2b00      	cmp	r3, #0
 8000dec:	d0c6      	beq.n	8000d7c <__sflush_r+0x30>
 8000dee:	2b1d      	cmp	r3, #29
 8000df0:	d001      	beq.n	8000df6 <__sflush_r+0xaa>
 8000df2:	2b16      	cmp	r3, #22
 8000df4:	d11d      	bne.n	8000e32 <__sflush_r+0xe6>
 8000df6:	602f      	str	r7, [r5, #0]
 8000df8:	2000      	movs	r0, #0
 8000dfa:	e021      	b.n	8000e40 <__sflush_r+0xf4>
 8000dfc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000e00:	b21b      	sxth	r3, r3
 8000e02:	e01a      	b.n	8000e3a <__sflush_r+0xee>
 8000e04:	690f      	ldr	r7, [r1, #16]
 8000e06:	2f00      	cmp	r7, #0
 8000e08:	d0f6      	beq.n	8000df8 <__sflush_r+0xac>
 8000e0a:	0793      	lsls	r3, r2, #30
 8000e0c:	680e      	ldr	r6, [r1, #0]
 8000e0e:	bf08      	it	eq
 8000e10:	694b      	ldreq	r3, [r1, #20]
 8000e12:	600f      	str	r7, [r1, #0]
 8000e14:	bf18      	it	ne
 8000e16:	2300      	movne	r3, #0
 8000e18:	1bf6      	subs	r6, r6, r7
 8000e1a:	608b      	str	r3, [r1, #8]
 8000e1c:	2e00      	cmp	r6, #0
 8000e1e:	ddeb      	ble.n	8000df8 <__sflush_r+0xac>
 8000e20:	6a21      	ldr	r1, [r4, #32]
 8000e22:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8000e26:	4633      	mov	r3, r6
 8000e28:	463a      	mov	r2, r7
 8000e2a:	4628      	mov	r0, r5
 8000e2c:	47e0      	blx	ip
 8000e2e:	2800      	cmp	r0, #0
 8000e30:	dc07      	bgt.n	8000e42 <__sflush_r+0xf6>
 8000e32:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000e36:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000e3a:	81a3      	strh	r3, [r4, #12]
 8000e3c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000e40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000e42:	4407      	add	r7, r0
 8000e44:	1a36      	subs	r6, r6, r0
 8000e46:	e7e9      	b.n	8000e1c <__sflush_r+0xd0>
 8000e48:	20400001 	.word	0x20400001

08000e4c <_fflush_r>:
 8000e4c:	b538      	push	{r3, r4, r5, lr}
 8000e4e:	690b      	ldr	r3, [r1, #16]
 8000e50:	4605      	mov	r5, r0
 8000e52:	460c      	mov	r4, r1
 8000e54:	b913      	cbnz	r3, 8000e5c <_fflush_r+0x10>
 8000e56:	2500      	movs	r5, #0
 8000e58:	4628      	mov	r0, r5
 8000e5a:	bd38      	pop	{r3, r4, r5, pc}
 8000e5c:	b118      	cbz	r0, 8000e66 <_fflush_r+0x1a>
 8000e5e:	6a03      	ldr	r3, [r0, #32]
 8000e60:	b90b      	cbnz	r3, 8000e66 <_fflush_r+0x1a>
 8000e62:	f7ff fb89 	bl	8000578 <__sinit>
 8000e66:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000e6a:	2b00      	cmp	r3, #0
 8000e6c:	d0f3      	beq.n	8000e56 <_fflush_r+0xa>
 8000e6e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000e70:	07d0      	lsls	r0, r2, #31
 8000e72:	d404      	bmi.n	8000e7e <_fflush_r+0x32>
 8000e74:	0599      	lsls	r1, r3, #22
 8000e76:	d402      	bmi.n	8000e7e <_fflush_r+0x32>
 8000e78:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000e7a:	f7ff fbf8 	bl	800066e <__retarget_lock_acquire_recursive>
 8000e7e:	4628      	mov	r0, r5
 8000e80:	4621      	mov	r1, r4
 8000e82:	f7ff ff63 	bl	8000d4c <__sflush_r>
 8000e86:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000e88:	07da      	lsls	r2, r3, #31
 8000e8a:	4605      	mov	r5, r0
 8000e8c:	d4e4      	bmi.n	8000e58 <_fflush_r+0xc>
 8000e8e:	89a3      	ldrh	r3, [r4, #12]
 8000e90:	059b      	lsls	r3, r3, #22
 8000e92:	d4e1      	bmi.n	8000e58 <_fflush_r+0xc>
 8000e94:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000e96:	f7ff fbeb 	bl	8000670 <__retarget_lock_release_recursive>
 8000e9a:	e7dd      	b.n	8000e58 <_fflush_r+0xc>

08000e9c <__malloc_lock>:
 8000e9c:	4801      	ldr	r0, [pc, #4]	@ (8000ea4 <__malloc_lock+0x8>)
 8000e9e:	f7ff bbe6 	b.w	800066e <__retarget_lock_acquire_recursive>
 8000ea2:	bf00      	nop
 8000ea4:	200001d8 	.word	0x200001d8

08000ea8 <__malloc_unlock>:
 8000ea8:	4801      	ldr	r0, [pc, #4]	@ (8000eb0 <__malloc_unlock+0x8>)
 8000eaa:	f7ff bbe1 	b.w	8000670 <__retarget_lock_release_recursive>
 8000eae:	bf00      	nop
 8000eb0:	200001d8 	.word	0x200001d8

08000eb4 <__sread>:
 8000eb4:	b510      	push	{r4, lr}
 8000eb6:	460c      	mov	r4, r1
 8000eb8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ebc:	f000 f956 	bl	800116c <_read_r>
 8000ec0:	2800      	cmp	r0, #0
 8000ec2:	bfab      	itete	ge
 8000ec4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000ec6:	89a3      	ldrhlt	r3, [r4, #12]
 8000ec8:	181b      	addge	r3, r3, r0
 8000eca:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000ece:	bfac      	ite	ge
 8000ed0:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000ed2:	81a3      	strhlt	r3, [r4, #12]
 8000ed4:	bd10      	pop	{r4, pc}

08000ed6 <__swrite>:
 8000ed6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000eda:	461f      	mov	r7, r3
 8000edc:	898b      	ldrh	r3, [r1, #12]
 8000ede:	05db      	lsls	r3, r3, #23
 8000ee0:	4605      	mov	r5, r0
 8000ee2:	460c      	mov	r4, r1
 8000ee4:	4616      	mov	r6, r2
 8000ee6:	d505      	bpl.n	8000ef4 <__swrite+0x1e>
 8000ee8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000eec:	2302      	movs	r3, #2
 8000eee:	2200      	movs	r2, #0
 8000ef0:	f000 f92a 	bl	8001148 <_lseek_r>
 8000ef4:	89a3      	ldrh	r3, [r4, #12]
 8000ef6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000efa:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000efe:	81a3      	strh	r3, [r4, #12]
 8000f00:	4632      	mov	r2, r6
 8000f02:	463b      	mov	r3, r7
 8000f04:	4628      	mov	r0, r5
 8000f06:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f0a:	f000 b951 	b.w	80011b0 <_write_r>

08000f0e <__sseek>:
 8000f0e:	b510      	push	{r4, lr}
 8000f10:	460c      	mov	r4, r1
 8000f12:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f16:	f000 f917 	bl	8001148 <_lseek_r>
 8000f1a:	1c43      	adds	r3, r0, #1
 8000f1c:	89a3      	ldrh	r3, [r4, #12]
 8000f1e:	bf15      	itete	ne
 8000f20:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000f22:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000f26:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000f2a:	81a3      	strheq	r3, [r4, #12]
 8000f2c:	bf18      	it	ne
 8000f2e:	81a3      	strhne	r3, [r4, #12]
 8000f30:	bd10      	pop	{r4, pc}

08000f32 <__sclose>:
 8000f32:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f36:	f000 b94d 	b.w	80011d4 <_close_r>

08000f3a <__swbuf_r>:
 8000f3a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f3c:	460e      	mov	r6, r1
 8000f3e:	4614      	mov	r4, r2
 8000f40:	4605      	mov	r5, r0
 8000f42:	b118      	cbz	r0, 8000f4c <__swbuf_r+0x12>
 8000f44:	6a03      	ldr	r3, [r0, #32]
 8000f46:	b90b      	cbnz	r3, 8000f4c <__swbuf_r+0x12>
 8000f48:	f7ff fb16 	bl	8000578 <__sinit>
 8000f4c:	69a3      	ldr	r3, [r4, #24]
 8000f4e:	60a3      	str	r3, [r4, #8]
 8000f50:	89a3      	ldrh	r3, [r4, #12]
 8000f52:	071a      	lsls	r2, r3, #28
 8000f54:	d501      	bpl.n	8000f5a <__swbuf_r+0x20>
 8000f56:	6923      	ldr	r3, [r4, #16]
 8000f58:	b943      	cbnz	r3, 8000f6c <__swbuf_r+0x32>
 8000f5a:	4621      	mov	r1, r4
 8000f5c:	4628      	mov	r0, r5
 8000f5e:	f000 f82b 	bl	8000fb8 <__swsetup_r>
 8000f62:	b118      	cbz	r0, 8000f6c <__swbuf_r+0x32>
 8000f64:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8000f68:	4638      	mov	r0, r7
 8000f6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f6c:	6823      	ldr	r3, [r4, #0]
 8000f6e:	6922      	ldr	r2, [r4, #16]
 8000f70:	1a98      	subs	r0, r3, r2
 8000f72:	6963      	ldr	r3, [r4, #20]
 8000f74:	b2f6      	uxtb	r6, r6
 8000f76:	4283      	cmp	r3, r0
 8000f78:	4637      	mov	r7, r6
 8000f7a:	dc05      	bgt.n	8000f88 <__swbuf_r+0x4e>
 8000f7c:	4621      	mov	r1, r4
 8000f7e:	4628      	mov	r0, r5
 8000f80:	f7ff ff64 	bl	8000e4c <_fflush_r>
 8000f84:	2800      	cmp	r0, #0
 8000f86:	d1ed      	bne.n	8000f64 <__swbuf_r+0x2a>
 8000f88:	68a3      	ldr	r3, [r4, #8]
 8000f8a:	3b01      	subs	r3, #1
 8000f8c:	60a3      	str	r3, [r4, #8]
 8000f8e:	6823      	ldr	r3, [r4, #0]
 8000f90:	1c5a      	adds	r2, r3, #1
 8000f92:	6022      	str	r2, [r4, #0]
 8000f94:	701e      	strb	r6, [r3, #0]
 8000f96:	6962      	ldr	r2, [r4, #20]
 8000f98:	1c43      	adds	r3, r0, #1
 8000f9a:	429a      	cmp	r2, r3
 8000f9c:	d004      	beq.n	8000fa8 <__swbuf_r+0x6e>
 8000f9e:	89a3      	ldrh	r3, [r4, #12]
 8000fa0:	07db      	lsls	r3, r3, #31
 8000fa2:	d5e1      	bpl.n	8000f68 <__swbuf_r+0x2e>
 8000fa4:	2e0a      	cmp	r6, #10
 8000fa6:	d1df      	bne.n	8000f68 <__swbuf_r+0x2e>
 8000fa8:	4621      	mov	r1, r4
 8000faa:	4628      	mov	r0, r5
 8000fac:	f7ff ff4e 	bl	8000e4c <_fflush_r>
 8000fb0:	2800      	cmp	r0, #0
 8000fb2:	d0d9      	beq.n	8000f68 <__swbuf_r+0x2e>
 8000fb4:	e7d6      	b.n	8000f64 <__swbuf_r+0x2a>
	...

08000fb8 <__swsetup_r>:
 8000fb8:	b538      	push	{r3, r4, r5, lr}
 8000fba:	4b29      	ldr	r3, [pc, #164]	@ (8001060 <__swsetup_r+0xa8>)
 8000fbc:	4605      	mov	r5, r0
 8000fbe:	6818      	ldr	r0, [r3, #0]
 8000fc0:	460c      	mov	r4, r1
 8000fc2:	b118      	cbz	r0, 8000fcc <__swsetup_r+0x14>
 8000fc4:	6a03      	ldr	r3, [r0, #32]
 8000fc6:	b90b      	cbnz	r3, 8000fcc <__swsetup_r+0x14>
 8000fc8:	f7ff fad6 	bl	8000578 <__sinit>
 8000fcc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fd0:	0719      	lsls	r1, r3, #28
 8000fd2:	d422      	bmi.n	800101a <__swsetup_r+0x62>
 8000fd4:	06da      	lsls	r2, r3, #27
 8000fd6:	d407      	bmi.n	8000fe8 <__swsetup_r+0x30>
 8000fd8:	2209      	movs	r2, #9
 8000fda:	602a      	str	r2, [r5, #0]
 8000fdc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000fe0:	81a3      	strh	r3, [r4, #12]
 8000fe2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000fe6:	e033      	b.n	8001050 <__swsetup_r+0x98>
 8000fe8:	0758      	lsls	r0, r3, #29
 8000fea:	d512      	bpl.n	8001012 <__swsetup_r+0x5a>
 8000fec:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000fee:	b141      	cbz	r1, 8001002 <__swsetup_r+0x4a>
 8000ff0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000ff4:	4299      	cmp	r1, r3
 8000ff6:	d002      	beq.n	8000ffe <__swsetup_r+0x46>
 8000ff8:	4628      	mov	r0, r5
 8000ffa:	f000 f90d 	bl	8001218 <_free_r>
 8000ffe:	2300      	movs	r3, #0
 8001000:	6363      	str	r3, [r4, #52]	@ 0x34
 8001002:	89a3      	ldrh	r3, [r4, #12]
 8001004:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001008:	81a3      	strh	r3, [r4, #12]
 800100a:	2300      	movs	r3, #0
 800100c:	6063      	str	r3, [r4, #4]
 800100e:	6923      	ldr	r3, [r4, #16]
 8001010:	6023      	str	r3, [r4, #0]
 8001012:	89a3      	ldrh	r3, [r4, #12]
 8001014:	f043 0308 	orr.w	r3, r3, #8
 8001018:	81a3      	strh	r3, [r4, #12]
 800101a:	6923      	ldr	r3, [r4, #16]
 800101c:	b94b      	cbnz	r3, 8001032 <__swsetup_r+0x7a>
 800101e:	89a3      	ldrh	r3, [r4, #12]
 8001020:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001024:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001028:	d003      	beq.n	8001032 <__swsetup_r+0x7a>
 800102a:	4621      	mov	r1, r4
 800102c:	4628      	mov	r0, r5
 800102e:	f000 f83f 	bl	80010b0 <__smakebuf_r>
 8001032:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001036:	f013 0201 	ands.w	r2, r3, #1
 800103a:	d00a      	beq.n	8001052 <__swsetup_r+0x9a>
 800103c:	2200      	movs	r2, #0
 800103e:	60a2      	str	r2, [r4, #8]
 8001040:	6962      	ldr	r2, [r4, #20]
 8001042:	4252      	negs	r2, r2
 8001044:	61a2      	str	r2, [r4, #24]
 8001046:	6922      	ldr	r2, [r4, #16]
 8001048:	b942      	cbnz	r2, 800105c <__swsetup_r+0xa4>
 800104a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800104e:	d1c5      	bne.n	8000fdc <__swsetup_r+0x24>
 8001050:	bd38      	pop	{r3, r4, r5, pc}
 8001052:	0799      	lsls	r1, r3, #30
 8001054:	bf58      	it	pl
 8001056:	6962      	ldrpl	r2, [r4, #20]
 8001058:	60a2      	str	r2, [r4, #8]
 800105a:	e7f4      	b.n	8001046 <__swsetup_r+0x8e>
 800105c:	2000      	movs	r0, #0
 800105e:	e7f7      	b.n	8001050 <__swsetup_r+0x98>
 8001060:	20000024 	.word	0x20000024

08001064 <__swhatbuf_r>:
 8001064:	b570      	push	{r4, r5, r6, lr}
 8001066:	460c      	mov	r4, r1
 8001068:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800106c:	2900      	cmp	r1, #0
 800106e:	b096      	sub	sp, #88	@ 0x58
 8001070:	4615      	mov	r5, r2
 8001072:	461e      	mov	r6, r3
 8001074:	da0d      	bge.n	8001092 <__swhatbuf_r+0x2e>
 8001076:	89a3      	ldrh	r3, [r4, #12]
 8001078:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800107c:	f04f 0100 	mov.w	r1, #0
 8001080:	bf14      	ite	ne
 8001082:	2340      	movne	r3, #64	@ 0x40
 8001084:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001088:	2000      	movs	r0, #0
 800108a:	6031      	str	r1, [r6, #0]
 800108c:	602b      	str	r3, [r5, #0]
 800108e:	b016      	add	sp, #88	@ 0x58
 8001090:	bd70      	pop	{r4, r5, r6, pc}
 8001092:	466a      	mov	r2, sp
 8001094:	f000 f8ae 	bl	80011f4 <_fstat_r>
 8001098:	2800      	cmp	r0, #0
 800109a:	dbec      	blt.n	8001076 <__swhatbuf_r+0x12>
 800109c:	9901      	ldr	r1, [sp, #4]
 800109e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80010a2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80010a6:	4259      	negs	r1, r3
 80010a8:	4159      	adcs	r1, r3
 80010aa:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80010ae:	e7eb      	b.n	8001088 <__swhatbuf_r+0x24>

080010b0 <__smakebuf_r>:
 80010b0:	898b      	ldrh	r3, [r1, #12]
 80010b2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80010b4:	079d      	lsls	r5, r3, #30
 80010b6:	4606      	mov	r6, r0
 80010b8:	460c      	mov	r4, r1
 80010ba:	d507      	bpl.n	80010cc <__smakebuf_r+0x1c>
 80010bc:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80010c0:	6023      	str	r3, [r4, #0]
 80010c2:	6123      	str	r3, [r4, #16]
 80010c4:	2301      	movs	r3, #1
 80010c6:	6163      	str	r3, [r4, #20]
 80010c8:	b003      	add	sp, #12
 80010ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80010cc:	ab01      	add	r3, sp, #4
 80010ce:	466a      	mov	r2, sp
 80010d0:	f7ff ffc8 	bl	8001064 <__swhatbuf_r>
 80010d4:	9f00      	ldr	r7, [sp, #0]
 80010d6:	4605      	mov	r5, r0
 80010d8:	4639      	mov	r1, r7
 80010da:	4630      	mov	r0, r6
 80010dc:	f7ff fc2a 	bl	8000934 <_malloc_r>
 80010e0:	b948      	cbnz	r0, 80010f6 <__smakebuf_r+0x46>
 80010e2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010e6:	059a      	lsls	r2, r3, #22
 80010e8:	d4ee      	bmi.n	80010c8 <__smakebuf_r+0x18>
 80010ea:	f023 0303 	bic.w	r3, r3, #3
 80010ee:	f043 0302 	orr.w	r3, r3, #2
 80010f2:	81a3      	strh	r3, [r4, #12]
 80010f4:	e7e2      	b.n	80010bc <__smakebuf_r+0xc>
 80010f6:	89a3      	ldrh	r3, [r4, #12]
 80010f8:	6020      	str	r0, [r4, #0]
 80010fa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80010fe:	81a3      	strh	r3, [r4, #12]
 8001100:	9b01      	ldr	r3, [sp, #4]
 8001102:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001106:	b15b      	cbz	r3, 8001120 <__smakebuf_r+0x70>
 8001108:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800110c:	4630      	mov	r0, r6
 800110e:	f000 f80b 	bl	8001128 <_isatty_r>
 8001112:	b128      	cbz	r0, 8001120 <__smakebuf_r+0x70>
 8001114:	89a3      	ldrh	r3, [r4, #12]
 8001116:	f023 0303 	bic.w	r3, r3, #3
 800111a:	f043 0301 	orr.w	r3, r3, #1
 800111e:	81a3      	strh	r3, [r4, #12]
 8001120:	89a3      	ldrh	r3, [r4, #12]
 8001122:	431d      	orrs	r5, r3
 8001124:	81a5      	strh	r5, [r4, #12]
 8001126:	e7cf      	b.n	80010c8 <__smakebuf_r+0x18>

08001128 <_isatty_r>:
 8001128:	b538      	push	{r3, r4, r5, lr}
 800112a:	4d06      	ldr	r5, [pc, #24]	@ (8001144 <_isatty_r+0x1c>)
 800112c:	2300      	movs	r3, #0
 800112e:	4604      	mov	r4, r0
 8001130:	4608      	mov	r0, r1
 8001132:	602b      	str	r3, [r5, #0]
 8001134:	f7ff f944 	bl	80003c0 <_isatty>
 8001138:	1c43      	adds	r3, r0, #1
 800113a:	d102      	bne.n	8001142 <_isatty_r+0x1a>
 800113c:	682b      	ldr	r3, [r5, #0]
 800113e:	b103      	cbz	r3, 8001142 <_isatty_r+0x1a>
 8001140:	6023      	str	r3, [r4, #0]
 8001142:	bd38      	pop	{r3, r4, r5, pc}
 8001144:	200001e4 	.word	0x200001e4

08001148 <_lseek_r>:
 8001148:	b538      	push	{r3, r4, r5, lr}
 800114a:	4d07      	ldr	r5, [pc, #28]	@ (8001168 <_lseek_r+0x20>)
 800114c:	4604      	mov	r4, r0
 800114e:	4608      	mov	r0, r1
 8001150:	4611      	mov	r1, r2
 8001152:	2200      	movs	r2, #0
 8001154:	602a      	str	r2, [r5, #0]
 8001156:	461a      	mov	r2, r3
 8001158:	f7ff f934 	bl	80003c4 <_lseek>
 800115c:	1c43      	adds	r3, r0, #1
 800115e:	d102      	bne.n	8001166 <_lseek_r+0x1e>
 8001160:	682b      	ldr	r3, [r5, #0]
 8001162:	b103      	cbz	r3, 8001166 <_lseek_r+0x1e>
 8001164:	6023      	str	r3, [r4, #0]
 8001166:	bd38      	pop	{r3, r4, r5, pc}
 8001168:	200001e4 	.word	0x200001e4

0800116c <_read_r>:
 800116c:	b538      	push	{r3, r4, r5, lr}
 800116e:	4d07      	ldr	r5, [pc, #28]	@ (800118c <_read_r+0x20>)
 8001170:	4604      	mov	r4, r0
 8001172:	4608      	mov	r0, r1
 8001174:	4611      	mov	r1, r2
 8001176:	2200      	movs	r2, #0
 8001178:	602a      	str	r2, [r5, #0]
 800117a:	461a      	mov	r2, r3
 800117c:	f7ff f8e8 	bl	8000350 <_read>
 8001180:	1c43      	adds	r3, r0, #1
 8001182:	d102      	bne.n	800118a <_read_r+0x1e>
 8001184:	682b      	ldr	r3, [r5, #0]
 8001186:	b103      	cbz	r3, 800118a <_read_r+0x1e>
 8001188:	6023      	str	r3, [r4, #0]
 800118a:	bd38      	pop	{r3, r4, r5, pc}
 800118c:	200001e4 	.word	0x200001e4

08001190 <_sbrk_r>:
 8001190:	b538      	push	{r3, r4, r5, lr}
 8001192:	4d06      	ldr	r5, [pc, #24]	@ (80011ac <_sbrk_r+0x1c>)
 8001194:	2300      	movs	r3, #0
 8001196:	4604      	mov	r4, r0
 8001198:	4608      	mov	r0, r1
 800119a:	602b      	str	r3, [r5, #0]
 800119c:	f7ff f914 	bl	80003c8 <_sbrk>
 80011a0:	1c43      	adds	r3, r0, #1
 80011a2:	d102      	bne.n	80011aa <_sbrk_r+0x1a>
 80011a4:	682b      	ldr	r3, [r5, #0]
 80011a6:	b103      	cbz	r3, 80011aa <_sbrk_r+0x1a>
 80011a8:	6023      	str	r3, [r4, #0]
 80011aa:	bd38      	pop	{r3, r4, r5, pc}
 80011ac:	200001e4 	.word	0x200001e4

080011b0 <_write_r>:
 80011b0:	b538      	push	{r3, r4, r5, lr}
 80011b2:	4d07      	ldr	r5, [pc, #28]	@ (80011d0 <_write_r+0x20>)
 80011b4:	4604      	mov	r4, r0
 80011b6:	4608      	mov	r0, r1
 80011b8:	4611      	mov	r1, r2
 80011ba:	2200      	movs	r2, #0
 80011bc:	602a      	str	r2, [r5, #0]
 80011be:	461a      	mov	r2, r3
 80011c0:	f7ff f8d4 	bl	800036c <_write>
 80011c4:	1c43      	adds	r3, r0, #1
 80011c6:	d102      	bne.n	80011ce <_write_r+0x1e>
 80011c8:	682b      	ldr	r3, [r5, #0]
 80011ca:	b103      	cbz	r3, 80011ce <_write_r+0x1e>
 80011cc:	6023      	str	r3, [r4, #0]
 80011ce:	bd38      	pop	{r3, r4, r5, pc}
 80011d0:	200001e4 	.word	0x200001e4

080011d4 <_close_r>:
 80011d4:	b538      	push	{r3, r4, r5, lr}
 80011d6:	4d06      	ldr	r5, [pc, #24]	@ (80011f0 <_close_r+0x1c>)
 80011d8:	2300      	movs	r3, #0
 80011da:	4604      	mov	r4, r0
 80011dc:	4608      	mov	r0, r1
 80011de:	602b      	str	r3, [r5, #0]
 80011e0:	f7ff f8e4 	bl	80003ac <_close>
 80011e4:	1c43      	adds	r3, r0, #1
 80011e6:	d102      	bne.n	80011ee <_close_r+0x1a>
 80011e8:	682b      	ldr	r3, [r5, #0]
 80011ea:	b103      	cbz	r3, 80011ee <_close_r+0x1a>
 80011ec:	6023      	str	r3, [r4, #0]
 80011ee:	bd38      	pop	{r3, r4, r5, pc}
 80011f0:	200001e4 	.word	0x200001e4

080011f4 <_fstat_r>:
 80011f4:	b538      	push	{r3, r4, r5, lr}
 80011f6:	4d07      	ldr	r5, [pc, #28]	@ (8001214 <_fstat_r+0x20>)
 80011f8:	2300      	movs	r3, #0
 80011fa:	4604      	mov	r4, r0
 80011fc:	4608      	mov	r0, r1
 80011fe:	4611      	mov	r1, r2
 8001200:	602b      	str	r3, [r5, #0]
 8001202:	f7ff f8d7 	bl	80003b4 <_fstat>
 8001206:	1c43      	adds	r3, r0, #1
 8001208:	d102      	bne.n	8001210 <_fstat_r+0x1c>
 800120a:	682b      	ldr	r3, [r5, #0]
 800120c:	b103      	cbz	r3, 8001210 <_fstat_r+0x1c>
 800120e:	6023      	str	r3, [r4, #0]
 8001210:	bd38      	pop	{r3, r4, r5, pc}
 8001212:	bf00      	nop
 8001214:	200001e4 	.word	0x200001e4

08001218 <_free_r>:
 8001218:	b538      	push	{r3, r4, r5, lr}
 800121a:	4605      	mov	r5, r0
 800121c:	2900      	cmp	r1, #0
 800121e:	d041      	beq.n	80012a4 <_free_r+0x8c>
 8001220:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001224:	1f0c      	subs	r4, r1, #4
 8001226:	2b00      	cmp	r3, #0
 8001228:	bfb8      	it	lt
 800122a:	18e4      	addlt	r4, r4, r3
 800122c:	f7ff fe36 	bl	8000e9c <__malloc_lock>
 8001230:	4a1d      	ldr	r2, [pc, #116]	@ (80012a8 <_free_r+0x90>)
 8001232:	6813      	ldr	r3, [r2, #0]
 8001234:	b933      	cbnz	r3, 8001244 <_free_r+0x2c>
 8001236:	6063      	str	r3, [r4, #4]
 8001238:	6014      	str	r4, [r2, #0]
 800123a:	4628      	mov	r0, r5
 800123c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001240:	f7ff be32 	b.w	8000ea8 <__malloc_unlock>
 8001244:	42a3      	cmp	r3, r4
 8001246:	d908      	bls.n	800125a <_free_r+0x42>
 8001248:	6820      	ldr	r0, [r4, #0]
 800124a:	1821      	adds	r1, r4, r0
 800124c:	428b      	cmp	r3, r1
 800124e:	bf01      	itttt	eq
 8001250:	6819      	ldreq	r1, [r3, #0]
 8001252:	685b      	ldreq	r3, [r3, #4]
 8001254:	1809      	addeq	r1, r1, r0
 8001256:	6021      	streq	r1, [r4, #0]
 8001258:	e7ed      	b.n	8001236 <_free_r+0x1e>
 800125a:	461a      	mov	r2, r3
 800125c:	685b      	ldr	r3, [r3, #4]
 800125e:	b10b      	cbz	r3, 8001264 <_free_r+0x4c>
 8001260:	42a3      	cmp	r3, r4
 8001262:	d9fa      	bls.n	800125a <_free_r+0x42>
 8001264:	6811      	ldr	r1, [r2, #0]
 8001266:	1850      	adds	r0, r2, r1
 8001268:	42a0      	cmp	r0, r4
 800126a:	d10b      	bne.n	8001284 <_free_r+0x6c>
 800126c:	6820      	ldr	r0, [r4, #0]
 800126e:	4401      	add	r1, r0
 8001270:	1850      	adds	r0, r2, r1
 8001272:	4283      	cmp	r3, r0
 8001274:	6011      	str	r1, [r2, #0]
 8001276:	d1e0      	bne.n	800123a <_free_r+0x22>
 8001278:	6818      	ldr	r0, [r3, #0]
 800127a:	685b      	ldr	r3, [r3, #4]
 800127c:	6053      	str	r3, [r2, #4]
 800127e:	4408      	add	r0, r1
 8001280:	6010      	str	r0, [r2, #0]
 8001282:	e7da      	b.n	800123a <_free_r+0x22>
 8001284:	d902      	bls.n	800128c <_free_r+0x74>
 8001286:	230c      	movs	r3, #12
 8001288:	602b      	str	r3, [r5, #0]
 800128a:	e7d6      	b.n	800123a <_free_r+0x22>
 800128c:	6820      	ldr	r0, [r4, #0]
 800128e:	1821      	adds	r1, r4, r0
 8001290:	428b      	cmp	r3, r1
 8001292:	bf04      	itt	eq
 8001294:	6819      	ldreq	r1, [r3, #0]
 8001296:	685b      	ldreq	r3, [r3, #4]
 8001298:	6063      	str	r3, [r4, #4]
 800129a:	bf04      	itt	eq
 800129c:	1809      	addeq	r1, r1, r0
 800129e:	6021      	streq	r1, [r4, #0]
 80012a0:	6054      	str	r4, [r2, #4]
 80012a2:	e7ca      	b.n	800123a <_free_r+0x22>
 80012a4:	bd38      	pop	{r3, r4, r5, pc}
 80012a6:	bf00      	nop
 80012a8:	200001e0 	.word	0x200001e0

080012ac <_init>:
 80012ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012ae:	bf00      	nop
 80012b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012b2:	bc08      	pop	{r3}
 80012b4:	469e      	mov	lr, r3
 80012b6:	4770      	bx	lr

080012b8 <_fini>:
 80012b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012ba:	bf00      	nop
 80012bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012be:	bc08      	pop	{r3}
 80012c0:	469e      	mov	lr, r3
 80012c2:	4770      	bx	lr
